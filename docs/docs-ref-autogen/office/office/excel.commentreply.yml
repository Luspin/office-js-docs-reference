### YamlMime:TSType
name: Excel.CommentReply
uid: 'office!Excel.CommentReply:class'
package: office!
fullName: Excel.CommentReply
summary: Represents a comment reply in the workbook.
remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: authorEmail
    uid: 'office!Excel.CommentReply#authorEmail:member'
    package: office!
    fullName: authorEmail
    summary: Gets the email of the comment reply's author.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type: string
  - name: authorName
    uid: 'office!Excel.CommentReply#authorName:member'
    package: office!
    fullName: authorName
    summary: Gets the name of the comment reply's author.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly authorName: string;'
      return:
        type: string
  - name: content
    uid: 'office!Excel.CommentReply#content:member'
    package: office!
    fullName: content
    summary: The comment reply's content. The string is plain text.
    remarks: >-
      \[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/12-comment/comment-replies.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Comments");
          const comment = sheet.comments.getItemAt(0);
          const reply = comment.replies.getItemAt(0);
          reply.load("content");
          // Sync to load the content of the comment reply.
          await context.sync();

          // Append "Please!" to the end of the comment reply.
          reply.content += " Please!";
          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'content: string;'
      return:
        type: string
  - name: contentType
    uid: 'office!Excel.CommentReply#contentType:member'
    package: office!
    fullName: contentType
    summary: The content type of the reply.
    remarks: '\[ [API set: ExcelApi 1.12](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly contentType: Excel.ContentType | "Plain" | "Mention";'
      return:
        type: '<xref uid="office!Excel.ContentType:enum" /> | "Plain" | "Mention"'
  - name: context
    uid: 'office!Excel.CommentReply#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: creationDate
    uid: 'office!Excel.CommentReply#creationDate:member'
    package: office!
    fullName: creationDate
    summary: Gets the creation time of the comment reply.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type: Date
  - name: id
    uid: 'office!Excel.CommentReply#id:member'
    package: office!
    fullName: id
    summary: Specifies the comment reply identifier.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: mentions
    uid: 'office!Excel.CommentReply#mentions:member'
    package: office!
    fullName: mentions
    summary: 'The entities (e.g., people) that are mentioned in comments.'
    remarks: '\[ [API set: ExcelApi 1.11](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly mentions: Excel.CommentMention[];'
      return:
        type: '<xref uid="office!Excel.CommentMention:interface" />[]'
  - name: resolved
    uid: 'office!Excel.CommentReply#resolved:member'
    package: office!
    fullName: resolved
    summary: The comment reply status. A value of `true` means the reply is in the resolved state.
    remarks: '\[ [API set: ExcelApi 1.11](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly resolved: boolean;'
      return:
        type: boolean
  - name: richContent
    uid: 'office!Excel.CommentReply#richContent:member'
    package: office!
    fullName: richContent
    summary: >-
      The rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users. Your
      add-in should only use this to parse rich comment content.
    remarks: '\[ [API set: ExcelApi 1.11](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly richContent: string;'
      return:
        type: string
methods:
  - name: assignTask(assignee)
    uid: 'office!Excel.CommentReply#assignTask:member(1)'
    package: office!
    fullName: assignTask(assignee)
    summary: >-
      Assigns the task attached to the comment to the given user as the sole assignee. If there is no task, one will be
      created.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'assignTask(assignee: Excel.EmailIdentity): Excel.DocumentTask;'
      parameters:
        - id: assignee
          description: The assignee's user identity information.
          type: '<xref uid="office!Excel.EmailIdentity:interface" />'
      return:
        type: '<xref uid="office!Excel.DocumentTask:class" />'
        description: ''
  - name: delete()
    uid: 'office!Excel.CommentReply#delete:member(1)'
    package: office!
    fullName: delete()
    summary: Deletes the comment reply.
    remarks: >-
      \[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/12-comment/comment-replies.yaml

      await Excel.run(async (context) => {
          // Remove the first comment reply from this worksheet's first comment.
          const sheet = context.workbook.worksheets.getItem("Comments");
          const comment = sheet.comments.getItemAt(0);
          comment.replies.getItemAt(0).delete();
          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getLocation()
    uid: 'office!Excel.CommentReply#getLocation:member(1)'
    package: office!
    fullName: getLocation()
    summary: Gets the cell where this comment reply is located.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getParentComment()
    uid: 'office!Excel.CommentReply#getParentComment:member(1)'
    package: office!
    fullName: getParentComment()
    summary: Gets the parent comment of this reply.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getParentComment(): Excel.Comment;'
      return:
        type: '<xref uid="office!Excel.Comment:class" />'
        description: ''
  - name: getTask()
    uid: 'office!Excel.CommentReply#getTask:member(1)'
    package: office!
    fullName: getTask()
    summary: >-
      Gets the task associated with this comment reply's thread. If there is no task for the comment thread, an
      `ItemNotFound` exception is thrown.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getTask(): Excel.DocumentTask;'
      return:
        type: '<xref uid="office!Excel.DocumentTask:class" />'
        description: ''
  - name: getTaskOrNullObject()
    uid: 'office!Excel.CommentReply#getTaskOrNullObject:member(1)'
    package: office!
    fullName: getTaskOrNullObject()
    summary: >-
      Gets the task associated with this comment reply's thread. If there is no task for the comment thread, then this
      method returns an object with its `isNullObject` property set to `true`<!-- -->. For further information, see
      [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'getTaskOrNullObject(): Excel.DocumentTask;'
      return:
        type: '<xref uid="office!Excel.DocumentTask:class" />'
        description: ''
  - name: load(options)
    uid: 'office!Excel.CommentReply#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.CommentReplyLoadOptions): Excel.CommentReply;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.CommentReplyLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.CommentReply:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.CommentReply#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentReply;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.CommentReply:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.CommentReply#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.CommentReply;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.CommentReply:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Excel.CommentReply#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.CommentReplyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Excel.Interfaces.CommentReplyUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Excel.CommentReply#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.CommentReply): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Excel.CommentReply:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.CommentReply#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.CommentReply object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Excel.Interfaces.CommentReplyData`<!-- -->) that contains shallow copies of any
      loaded child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentReplyData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.CommentReplyData:interface" />'
        description: ''
  - name: updateMentions(contentWithMentions)
    uid: 'office!Excel.CommentReply#updateMentions:member(1)'
    package: office!
    fullName: updateMentions(contentWithMentions)
    summary: Updates the comment content with a specially formatted string and a list of mentions.
    remarks: '\[ [API set: ExcelApi 1.11](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'updateMentions(contentWithMentions: Excel.CommentRichContent): void;'
      parameters:
        - id: contentWithMentions
          description: >-
            The content for the comment. This contains a specially formatted string and a list of mentions that will be
            parsed into the string when displayed by Excel.
          type: '<xref uid="office!Excel.CommentRichContent:interface" />'
      return:
        type: void
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
