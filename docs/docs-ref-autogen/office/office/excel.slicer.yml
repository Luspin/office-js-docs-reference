### YamlMime:TSType
name: Excel.Slicer
uid: 'office!Excel.Slicer:class'
package: office!
fullName: Excel.Slicer
summary: Represents a `Slicer` object in the workbook.
remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: caption
    uid: 'office!Excel.Slicer#caption:member'
    package: office!
    fullName: caption
    summary: Represents the caption of the slicer.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'caption: string;'
      return:
        type: string
  - name: context
    uid: 'office!Excel.Slicer#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: height
    uid: 'office!Excel.Slicer#height:member'
    package: office!
    fullName: height
    summary: >-
      Represents the height, in points, of the slicer. Throws an `InvalidArgument` exception when set with a negative
      value or zero as an input.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'height: number;'
      return:
        type: number
  - name: id
    uid: 'office!Excel.Slicer#id:member'
    package: office!
    fullName: id
    summary: Represents the unique ID of the slicer.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: isFilterCleared
    uid: 'office!Excel.Slicer#isFilterCleared:member'
    package: office!
    fullName: isFilterCleared
    summary: Value is `true` if all filters currently applied on the slicer are cleared.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type: boolean
  - name: left
    uid: 'office!Excel.Slicer#left:member'
    package: office!
    fullName: left
    summary: >-
      Represents the distance, in points, from the left side of the slicer to the left of the worksheet. Throws an
      `InvalidArgument` error when set with a negative value as an input.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'left: number;'
      return:
        type: number
  - name: name
    uid: 'office!Excel.Slicer#name:member'
    package: office!
    fullName: name
    summary: Represents the name of the slicer.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
  - name: nameInFormula
    uid: 'office!Excel.Slicer#nameInFormula:member'
    package: office!
    fullName: nameInFormula
    summary: Represents the slicer name used in the formula.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'nameInFormula: string;'
      return:
        type: string
  - name: slicerItems
    uid: 'office!Excel.Slicer#slicerItems:member'
    package: office!
    fullName: slicerItems
    summary: Represents the collection of slicer items that are part of the slicer.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type: '<xref uid="office!Excel.SlicerItemCollection:class" />'
  - name: slicerStyle
    uid: 'office!Excel.Slicer#slicerStyle:member'
    package: office!
    fullName: slicerStyle
    summary: The style applied to the slicer.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly slicerStyle: Excel.SlicerStyle;'
      return:
        type: '<xref uid="office!Excel.SlicerStyle:class" />'
  - name: sortBy
    uid: 'office!Excel.Slicer#sortBy:member'
    package: office!
    fullName: sortBy
    summary: >-
      Represents the sort order of the items in the slicer. Possible values are: "DataSourceOrder", "Ascending",
      "Descending".
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type: '<xref uid="office!Excel.SlicerSortType:enum" /> | "DataSourceOrder" | "Ascending" | "Descending"'
  - name: style
    uid: 'office!Excel.Slicer#style:member'
    package: office!
    fullName: style
    summary: >-
      Constant value that represents the slicer style. Possible values are: "SlicerStyleLight1" through
      "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".
      A custom user-defined style present in the workbook can also be specified.
    remarks: >-
      \[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml

      await Excel.run(async (context) => {
          const slicer = context.workbook.slicers.getItem("Fruit Slicer");
          slicer.style = "SlicerStyleLight6";
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'style: string;'
      return:
        type: string
  - name: top
    uid: 'office!Excel.Slicer#top:member'
    package: office!
    fullName: top
    summary: >-
      Represents the distance, in points, from the top edge of the slicer to the top of the worksheet. Throws an
      `InvalidArgument` error when set with a negative value as an input.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'top: number;'
      return:
        type: number
  - name: width
    uid: 'office!Excel.Slicer#width:member'
    package: office!
    fullName: width
    summary: >-
      Represents the width, in points, of the slicer. Throws an `InvalidArgument` error when set with a negative value
      or zero as an input.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'width: number;'
      return:
        type: number
  - name: worksheet
    uid: 'office!Excel.Slicer#worksheet:member'
    package: office!
    fullName: worksheet
    summary: Represents the worksheet containing the slicer.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type: '<xref uid="office!Excel.Worksheet:class" />'
methods:
  - name: clearFilters()
    uid: 'office!Excel.Slicer#clearFilters:member(1)'
    package: office!
    fullName: clearFilters()
    summary: Clears all the filters currently applied on the slicer.
    remarks: >-
      \[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml

      await Excel.run(async (context) => {
          const slicer = context.workbook.slicers.getItem("Fruit Slicer");
          slicer.clearFilters();
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearFilters(): void;'
      return:
        type: void
        description: ''
  - name: delete()
    uid: 'office!Excel.Slicer#delete:member(1)'
    package: office!
    fullName: delete()
    summary: Deletes the slicer.
    remarks: >-
      \[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getActiveWorksheet();
          sheet.slicers.getItemAt(0).delete();
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getSelectedItems()
    uid: 'office!Excel.Slicer#getSelectedItems:member(1)'
    package: office!
    fullName: getSelectedItems()
    summary: Returns an array of selected items' keys.
    remarks: '\[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;'
        description: ''
  - name: load(options)
    uid: 'office!Excel.Slicer#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.SlicerLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.Slicer:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.Slicer#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.Slicer:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.Slicer#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Slicer;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.Slicer:class" />'
        description: ''
  - name: selectItems(items)
    uid: 'office!Excel.Slicer#selectItems:member(1)'
    package: office!
    fullName: selectItems(items)
    summary: >-
      Selects slicer items based on their keys. The previous selections are cleared. All items will be selected by
      default if the array is empty.
    remarks: >-
      \[ [API set: ExcelApi 1.10](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml

      await Excel.run(async (context) => {
          const slicer = context.workbook.slicers.getItem("Fruit Slicer");
          slicer.selectItems(["Lemon", "Lime", "Orange"]);
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'selectItems(items?: string[]): void;'
      parameters:
        - id: items
          description: Optional. The specified slicer item names to be selected.
          type: 'string[]'
      return:
        type: void
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Excel.Slicer#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Excel.Interfaces.SlicerUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Excel.Slicer#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Excel.Slicer:class" />'
      return:
        type: void
        description: ''
  - name: setStyle(style)
    uid: 'office!Excel.Slicer#setStyle:member(1)'
    package: office!
    fullName: setStyle(style)
    summary: Sets the style applied to the slicer.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'setStyle(style: string | SlicerStyle | BuiltInSlicerStyle): void;'
      parameters:
        - id: style
          description: >-
            The style to apply to the slicer. An `InvalidArgument` error is thrown if a string is provided that does not
            match the name of any style.
          type: 'string | <xref uid="office!Excel.SlicerStyle:class" /> | <xref uid="office!Excel.BuiltInSlicerStyle:enum" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.Slicer#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.SlicerData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.SlicerData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
