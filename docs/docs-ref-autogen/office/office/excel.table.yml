### YamlMime:TSType
name: Excel.Table
uid: 'office!Excel.Table:class'
package: office!
fullName: Excel.Table
summary: >-
  Represents an Excel table. To learn more about the table object model, read [Work with tables using the Excel
  JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)<!-- -->.
remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: autoFilter
    uid: 'office!Excel.Table#autoFilter:member'
    package: office!
    fullName: autoFilter
    summary: Represents the `AutoFilter` object of the table.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly autoFilter: Excel.AutoFilter;'
      return:
        type: '<xref uid="office!Excel.AutoFilter:class" />'
  - name: columns
    uid: 'office!Excel.Table#columns:member'
    package: office!
    fullName: columns
    summary: Represents a collection of all the columns in the table.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type: '<xref uid="office!Excel.TableColumnCollection:class" />'
  - name: context
    uid: 'office!Excel.Table#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: highlightFirstColumn
    uid: 'office!Excel.Table#highlightFirstColumn:member'
    package: office!
    fullName: highlightFirstColumn
    summary: Specifies if the first column contains special formatting.
    remarks: '\[ [API set: ExcelApi 1.3](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightFirstColumn: boolean;'
      return:
        type: boolean
  - name: highlightLastColumn
    uid: 'office!Excel.Table#highlightLastColumn:member'
    package: office!
    fullName: highlightLastColumn
    summary: Specifies if the last column contains special formatting.
    remarks: '\[ [API set: ExcelApi 1.3](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'highlightLastColumn: boolean;'
      return:
        type: boolean
  - name: id
    uid: 'office!Excel.Table#id:member'
    package: office!
    fullName: id
    summary: >-
      Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the
      same even when the table is renamed.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: legacyId
    uid: 'office!Excel.Table#legacyId:member'
    package: office!
    fullName: legacyId
    summary: Returns a numeric ID.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly legacyId: string;'
      return:
        type: string
  - name: name
    uid: 'office!Excel.Table#name:member'
    package: office!
    fullName: name
    summary: >-
      Name of the table.


      The set name of the table must follow the guidelines specified in the [Rename an Excel
      table](https://support.microsoft.com/office/fbf49a4f-82a3-43eb-8ba2-44d21233b114) article.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string;'
      return:
        type: string
  - name: rows
    uid: 'office!Excel.Table#rows:member'
    package: office!
    fullName: rows
    summary: Represents a collection of all the rows in the table.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type: '<xref uid="office!Excel.TableRowCollection:class" />'
  - name: showBandedColumns
    uid: 'office!Excel.Table#showBandedColumns:member'
    package: office!
    fullName: showBandedColumns
    summary: >-
      Specifies if the columns show banded formatting in which odd columns are highlighted differently from even ones,
      to make reading the table easier.
    remarks: '\[ [API set: ExcelApi 1.3](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showBandedColumns: boolean;'
      return:
        type: boolean
  - name: showBandedRows
    uid: 'office!Excel.Table#showBandedRows:member'
    package: office!
    fullName: showBandedRows
    summary: >-
      Specifies if the rows show banded formatting in which odd rows are highlighted differently from even ones, to make
      reading the table easier.
    remarks: '\[ [API set: ExcelApi 1.3](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showBandedRows: boolean;'
      return:
        type: boolean
  - name: showFilterButton
    uid: 'office!Excel.Table#showFilterButton:member'
    package: office!
    fullName: showFilterButton
    summary: >-
      Specifies if the filter buttons are visible at the top of each column header. Setting this is only allowed if the
      table contains a header row.
    remarks: '\[ [API set: ExcelApi 1.3](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showFilterButton: boolean;'
      return:
        type: boolean
  - name: showHeaders
    uid: 'office!Excel.Table#showHeaders:member'
    package: office!
    fullName: showHeaders
    summary: Specifies if the header row is visible. This value can be set to show or remove the header row.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type: boolean
  - name: showTotals
    uid: 'office!Excel.Table#showTotals:member'
    package: office!
    fullName: showTotals
    summary: Specifies if the total row is visible. This value can be set to show or remove the total row.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showTotals: boolean;'
      return:
        type: boolean
  - name: sort
    uid: 'office!Excel.Table#sort:member'
    package: office!
    fullName: sort
    summary: Represents the sorting for the table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type: '<xref uid="office!Excel.TableSort:class" />'
  - name: style
    uid: 'office!Excel.Table#style:member'
    package: office!
    fullName: style
    summary: >-
      Constant value that represents the table style. Possible values are: "TableStyleLight1" through
      "TableStyleLight21", "TableStyleMedium1" through "TableStyleMedium28", "TableStyleDark1" through
      "TableStyleDark11". A custom user-defined style present in the workbook can also be specified.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      // Set table style.
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          table.name = 'Table1-Renamed';
          table.showTotals = false;
          table.style = 'TableStyleMedium2';
          table.load('tableStyle');
          await context.sync();
          
          console.log(table.style);
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'style: string;'
      return:
        type: string
  - name: tableStyle
    uid: 'office!Excel.Table#tableStyle:member'
    package: office!
    fullName: tableStyle
    summary: The style applied to the table.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly tableStyle: Excel.TableStyle;'
      return:
        type: '<xref uid="office!Excel.TableStyle:class" />'
  - name: worksheet
    uid: 'office!Excel.Table#worksheet:member'
    package: office!
    fullName: worksheet
    summary: The worksheet containing the current table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type: '<xref uid="office!Excel.Worksheet:class" />'
methods:
  - name: clearFilters()
    uid: 'office!Excel.Table#clearFilters:member(1)'
    package: office!
    fullName: clearFilters()
    summary: Clears all the filters currently applied on the table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearFilters(): void;'
      return:
        type: void
        description: ''
  - name: clearStyle()
    uid: 'office!Excel.Table#clearStyle:member(1)'
    package: office!
    fullName: clearStyle()
    summary: Changes the table to use the default table style.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'clearStyle(): void;'
      return:
        type: void
        description: ''
  - name: convertToRange()
    uid: 'office!Excel.Table#convertToRange:member(1)'
    package: office!
    fullName: convertToRange()
    summary: Converts the table into a normal range of cells. All data is preserved.
    remarks: |-
      \[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          table.convertToRange();
          await context.sync(); 
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: delete()
    uid: 'office!Excel.Table#delete:member(1)'
    package: office!
    fullName: delete()
    summary: Deletes the table.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          table.delete();
          await context.sync(); 
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getDataBodyRange()
    uid: 'office!Excel.Table#getDataBodyRange:member(1)'
    package: office!
    fullName: getDataBodyRange()
    summary: Gets the range object associated with the data body of the table.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          const tableDataRange = table.getDataBodyRange();
          tableDataRange.load('address')
          await context.sync();
          
          console.log(tableDataRange.address);
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getHeaderRowRange()
    uid: 'office!Excel.Table#getHeaderRowRange:member(1)'
    package: office!
    fullName: getHeaderRowRange()
    summary: Gets the range object associated with the header row of the table.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          const tableHeaderRange = table.getHeaderRowRange();
          tableHeaderRange.load('address');
          await context.sync();

          console.log(tableHeaderRange.address);
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getRange()
    uid: 'office!Excel.Table#getRange:member(1)'
    package: office!
    fullName: getRange()
    summary: Gets the range object associated with the entire table.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          const tableRange = table.getRange();
          tableRange.load('address');    
          await context.sync();
          
          console.log(tableRange.address);
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getTotalRowRange()
    uid: 'office!Excel.Table#getTotalRowRange:member(1)'
    package: office!
    fullName: getTotalRowRange()
    summary: Gets the range object associated with the totals row of the table.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          const tableTotalsRange = table.getTotalRowRange();
          tableTotalsRange.load('address');    
          await context.sync();
          
          console.log(tableTotalsRange.address);
      });
      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: load(options)
    uid: 'office!Excel.Table#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.TableLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.Table:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.Table#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.Table:class" />'
        description: |-


          #### Examples

          ```typescript
          // Get a table by name.
          await Excel.run(async (context) => { 
              const tableName = 'Table1';
              const table = context.workbook.tables.getItem(tableName);
              table.load('id')
              await context.sync();
              
              console.log(table.id);
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.Table#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Table;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.Table:class" />'
        description: ''
  - name: reapplyFilters()
    uid: 'office!Excel.Table#reapplyFilters:member(1)'
    package: office!
    fullName: reapplyFilters()
    summary: Reapplies all the filters currently on the table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type: void
        description: ''
  - name: resize(newRange)
    uid: 'office!Excel.Table#resize:member(1)'
    package: office!
    fullName: resize(newRange)
    summary: >-
      Resize the table to the new range. The new range must overlap with the original table range and the headers (or
      the top of the table) must be in the same row.
    remarks: >-
      \[ [API set: ExcelApi 1.13](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/46-table/resize-table.yaml

      await Excel.run(async (context) => {
        // Retrieve the worksheet and a table on that worksheet.
        const sheet = context.workbook.worksheets.getItem("Sample");
        const expensesTable = sheet.tables.getItem("ExpensesTable");
        
        // Resize the table.
        expensesTable.resize("A1:D20");
        
        await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resize(newRange: Range | string): void;'
      parameters:
        - id: newRange
          description: The range object or range address that will be used to determine the new size of the table.
          type: '<xref uid="office!Excel.Range:class" /> | string'
      return:
        type: void
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Excel.Table#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Excel.Interfaces.TableUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Excel.Table#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.Table): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Excel.Table:class" />'
      return:
        type: void
        description: ''
  - name: setStyle(style)
    uid: 'office!Excel.Table#setStyle:member(1)'
    package: office!
    fullName: setStyle(style)
    summary: Sets the style applied to the table.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'setStyle(style: string | TableStyle | BuiltInTableStyle): void;'
      parameters:
        - id: style
          description: >-
            The style to apply to the table. An `InvalidArgumentException` is thrown if a string is provided that does
            not match the name of any style.
          type: 'string | <xref uid="office!Excel.TableStyle:class" /> | <xref uid="office!Excel.BuiltInTableStyle:enum" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.Table#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.TableData:interface" />'
        description: ''
events:
  - name: onChanged
    uid: 'office!Excel.Table#onChanged:member'
    package: office!
    fullName: onChanged
    summary: Occurs when data in cells changes on a specific table.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-table-changed.yaml

      await Excel.run(async (context) => {
          let table = context.workbook.tables.getItemAt(0);
          table.onChanged.add(onChange);

          await context.sync();
          console.log("A handler has been registered for the onChanged event");
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type: >-
          <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref
          uid="office!Excel.TableChangedEventArgs:interface" />&gt;
  - name: onFiltered
    uid: 'office!Excel.Table#onFiltered:member'
    package: office!
    fullName: onFiltered
    summary: Occurs when a filter is applied on a specific table.
    remarks: '\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>;'
      return:
        type: >-
          <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref
          uid="office!Excel.TableFilteredEventArgs:interface" />&gt;
  - name: onSelectionChanged
    uid: 'office!Excel.Table#onSelectionChanged:member'
    package: office!
    fullName: onSelectionChanged
    summary: Occurs when the selection changes on a specific table.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/30-events/events-table-changed.yaml

      await Excel.run(async (context) => {
          let table = context.workbook.tables.getItemAt(0);
          table.onSelectionChanged.add(onSelectionChange);

          await context.sync();
          console.log("A handler has been registered for table onSelectionChanged event");
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
      return:
        type: >-
          <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref
          uid="office!Excel.TableSelectionChangedEventArgs:interface" />&gt;
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
