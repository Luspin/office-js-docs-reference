### YamlMime:TSType
name: Excel.ShapeGroup
uid: 'office!Excel.ShapeGroup:class'
package: office!
fullName: Excel.ShapeGroup
summary: 'Represents a shape group inside a worksheet. To get the corresponding `Shape` object, use `ShapeGroup.shape`<!-- -->.'
remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Excel.ShapeGroup#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: id
    uid: 'office!Excel.ShapeGroup#id:member'
    package: office!
    fullName: id
    summary: Specifies the shape identifier.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: shape
    uid: 'office!Excel.ShapeGroup#shape:member'
    package: office!
    fullName: shape
    summary: Returns the `Shape` object associated with the group.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type: '<xref uid="office!Excel.Shape:class" />'
  - name: shapes
    uid: 'office!Excel.ShapeGroup#shapes:member'
    package: office!
    fullName: shapes
    summary: Returns the collection of `Shape` objects.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly shapes: Excel.GroupShapeCollection;'
      return:
        type: '<xref uid="office!Excel.GroupShapeCollection:class" />'
methods:
  - name: load(options)
    uid: 'office!Excel.ShapeGroup#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.ShapeGroupLoadOptions): Excel.ShapeGroup;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.ShapeGroupLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.ShapeGroup:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.ShapeGroup#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ShapeGroup;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.ShapeGroup:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.ShapeGroup#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ShapeGroup;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.ShapeGroup:class" />'
        description: ''
  - name: toJSON()
    uid: 'office!Excel.ShapeGroup#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.ShapeGroup object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.ShapeGroupData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeGroupData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.ShapeGroupData:interface" />'
        description: ''
  - name: ungroup()
    uid: 'office!Excel.ShapeGroup#ungroup:member(1)'
    package: office!
    fullName: ungroup()
    summary: Ungroups any grouped shapes in the specified shape group.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-groups.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Shapes");

          const shapeGroup = sheet.shapes.getItem("Group").group;
          shapeGroup.ungroup();
          console.log("Shapes ungrouped");

          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ungroup(): void;'
      return:
        type: void
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
