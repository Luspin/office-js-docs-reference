### YamlMime:TSType
name: Excel.PageLayout
uid: 'office!Excel.PageLayout:class'
package: office!
fullName: Excel.PageLayout
summary: >-
  Represents layout and print settings that are not dependent on any printer-specific implementation. These settings
  include margins, orientation, page numbering, title rows, and print area.
remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: blackAndWhite
    uid: 'office!Excel.PageLayout#blackAndWhite:member'
    package: office!
    fullName: blackAndWhite
    summary: The worksheet's black and white print option.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'blackAndWhite: boolean;'
      return:
        type: boolean
  - name: bottomMargin
    uid: 'office!Excel.PageLayout#bottomMargin:member'
    package: office!
    fullName: bottomMargin
    summary: The worksheet's bottom page margin to use for printing in points.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'bottomMargin: number;'
      return:
        type: number
  - name: centerHorizontally
    uid: 'office!Excel.PageLayout#centerHorizontally:member'
    package: office!
    fullName: centerHorizontally
    summary: >-
      The worksheet's center horizontally flag. This flag determines whether the worksheet will be centered horizontally
      when it's printed.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml

      await Excel.run(async (context) => {
          const farmSheet = context.workbook.worksheets.getItem("Print");
          farmSheet.pageLayout.centerHorizontally = true;
          farmSheet.pageLayout.centerVertically = true;
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'centerHorizontally: boolean;'
      return:
        type: boolean
  - name: centerVertically
    uid: 'office!Excel.PageLayout#centerVertically:member'
    package: office!
    fullName: centerVertically
    summary: >-
      The worksheet's center vertically flag. This flag determines whether the worksheet will be centered vertically
      when it's printed.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml

      await Excel.run(async (context) => {
          const farmSheet = context.workbook.worksheets.getItem("Print");
          farmSheet.pageLayout.centerHorizontally = true;
          farmSheet.pageLayout.centerVertically = true;
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'centerVertically: boolean;'
      return:
        type: boolean
  - name: context
    uid: 'office!Excel.PageLayout#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: draftMode
    uid: 'office!Excel.PageLayout#draftMode:member'
    package: office!
    fullName: draftMode
    summary: 'The worksheet''s draft mode option. If `true`<!-- -->, the sheet will be printed without graphics.'
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'draftMode: boolean;'
      return:
        type: boolean
  - name: firstPageNumber
    uid: 'office!Excel.PageLayout#firstPageNumber:member'
    package: office!
    fullName: firstPageNumber
    summary: The worksheet's first page number to print. A `null` value represents "auto" page numbering.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'firstPageNumber: number | "";'
      return:
        type: number | ""
  - name: footerMargin
    uid: 'office!Excel.PageLayout#footerMargin:member'
    package: office!
    fullName: footerMargin
    summary: 'The worksheet''s footer margin, in points, for use when printing.'
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'footerMargin: number;'
      return:
        type: number
  - name: headerMargin
    uid: 'office!Excel.PageLayout#headerMargin:member'
    package: office!
    fullName: headerMargin
    summary: 'The worksheet''s header margin, in points, for use when printing.'
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'headerMargin: number;'
      return:
        type: number
  - name: headersFooters
    uid: 'office!Excel.PageLayout#headersFooters:member'
    package: office!
    fullName: headersFooters
    summary: Header and footer configuration for the worksheet.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly headersFooters: Excel.HeaderFooterGroup;'
      return:
        type: '<xref uid="office!Excel.HeaderFooterGroup:class" />'
  - name: leftMargin
    uid: 'office!Excel.PageLayout#leftMargin:member'
    package: office!
    fullName: leftMargin
    summary: 'The worksheet''s left margin, in points, for use when printing.'
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'leftMargin: number;'
      return:
        type: number
  - name: orientation
    uid: 'office!Excel.PageLayout#orientation:member'
    package: office!
    fullName: orientation
    summary: The worksheet's orientation of the page.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml

      await Excel.run(async (context) => {
          const farmSheet = context.workbook.worksheets.getItem("Print");
          farmSheet.pageLayout.orientation = Excel.PageOrientation.landscape;
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'orientation: Excel.PageOrientation | "Portrait" | "Landscape";'
      return:
        type: '<xref uid="office!Excel.PageOrientation:enum" /> | "Portrait" | "Landscape"'
  - name: paperSize
    uid: 'office!Excel.PageLayout#paperSize:member'
    package: office!
    fullName: paperSize
    summary: The worksheet's paper size of the page.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        paperSize: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" |
        "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" |
        "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" |
        "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" |
        "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" |
        "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman";
      return:
        type: >-
          <xref uid="office!Excel.PaperType:enum" /> | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" |
          "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" |
          "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" |
          "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65"
          | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" |
          "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
  - name: printComments
    uid: 'office!Excel.PageLayout#printComments:member'
    package: office!
    fullName: printComments
    summary: Specifies if the worksheet's comments should be displayed when printing.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printComments: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace";'
      return:
        type: '<xref uid="office!Excel.PrintComments:enum" /> | "NoComments" | "EndSheet" | "InPlace"'
  - name: printErrors
    uid: 'office!Excel.PageLayout#printErrors:member'
    package: office!
    fullName: printErrors
    summary: The worksheet's print errors option.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printErrors: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable";'
      return:
        type: '<xref uid="office!Excel.PrintErrorType:enum" /> | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"'
  - name: printGridlines
    uid: 'office!Excel.PageLayout#printGridlines:member'
    package: office!
    fullName: printGridlines
    summary: Specifies if the worksheet's gridlines will be printed.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printGridlines: boolean;'
      return:
        type: boolean
  - name: printHeadings
    uid: 'office!Excel.PageLayout#printHeadings:member'
    package: office!
    fullName: printHeadings
    summary: Specifies if the worksheet's headings will be printed.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printHeadings: boolean;'
      return:
        type: boolean
  - name: printOrder
    uid: 'office!Excel.PageLayout#printOrder:member'
    package: office!
    fullName: printOrder
    summary: The worksheet's page print order option. This specifies the order to use for processing the page number printed.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'printOrder: Excel.PrintOrder | "DownThenOver" | "OverThenDown";'
      return:
        type: '<xref uid="office!Excel.PrintOrder:enum" /> | "DownThenOver" | "OverThenDown"'
  - name: rightMargin
    uid: 'office!Excel.PageLayout#rightMargin:member'
    package: office!
    fullName: rightMargin
    summary: 'The worksheet''s right margin, in points, for use when printing.'
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rightMargin: number;'
      return:
        type: number
  - name: topMargin
    uid: 'office!Excel.PageLayout#topMargin:member'
    package: office!
    fullName: topMargin
    summary: 'The worksheet''s top margin, in points, for use when printing.'
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'topMargin: number;'
      return:
        type: number
  - name: zoom
    uid: 'office!Excel.PageLayout#zoom:member'
    package: office!
    fullName: zoom
    summary: >-
      The worksheet's print zoom options. The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom =
      {...}` instead of `x.zoom.scale = ...`<!-- -->).
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml

      await Excel.run(async (context) => {
          const farmSheet = context.workbook.worksheets.getItem("Print");
          farmSheet.pageLayout.zoom = { scale: 200 };
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'zoom: Excel.PageLayoutZoomOptions;'
      return:
        type: '<xref uid="office!Excel.PageLayoutZoomOptions:interface" />'
methods:
  - name: getPrintArea()
    uid: 'office!Excel.PageLayout#getPrintArea:member(1)'
    package: office!
    fullName: getPrintArea()
    summary: >-
      Gets the `RangeAreas` object, comprising one or more rectangular ranges, that represents the print area for the
      worksheet. If there is no print area, an `ItemNotFound` error will be thrown.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintArea(): Excel.RangeAreas;'
      return:
        type: '<xref uid="office!Excel.RangeAreas:class" />'
        description: ''
  - name: getPrintAreaOrNullObject()
    uid: 'office!Excel.PageLayout#getPrintAreaOrNullObject:member(1)'
    package: office!
    fullName: getPrintAreaOrNullObject()
    summary: >-
      Gets the `RangeAreas` object, comprising one or more rectangular ranges, that represents the print area for the
      worksheet. If there is no print area, then this method returns an object with its `isNullObject` property set to
      `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintAreaOrNullObject(): Excel.RangeAreas;'
      return:
        type: '<xref uid="office!Excel.RangeAreas:class" />'
        description: ''
  - name: getPrintTitleColumns()
    uid: 'office!Excel.PageLayout#getPrintTitleColumns:member(1)'
    package: office!
    fullName: getPrintTitleColumns()
    summary: Gets the range object representing the title columns.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleColumns(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getPrintTitleColumnsOrNullObject()
    uid: 'office!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)'
    package: office!
    fullName: getPrintTitleColumnsOrNullObject()
    summary: >-
      Gets the range object representing the title columns. If not set, then this method returns an object with its
      `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleColumnsOrNullObject(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getPrintTitleRows()
    uid: 'office!Excel.PageLayout#getPrintTitleRows:member(1)'
    package: office!
    fullName: getPrintTitleRows()
    summary: Gets the range object representing the title rows.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleRows(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getPrintTitleRowsOrNullObject()
    uid: 'office!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)'
    package: office!
    fullName: getPrintTitleRowsOrNullObject()
    summary: >-
      Gets the range object representing the title rows. If not set, then this method returns an object with its
      `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPrintTitleRowsOrNullObject(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: load(options)
    uid: 'office!Excel.PageLayout#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.PageLayoutLoadOptions): Excel.PageLayout;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.PageLayoutLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.PageLayout:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.PageLayout#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageLayout;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.PageLayout:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.PageLayout#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PageLayout;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.PageLayout:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Excel.PageLayout#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.PageLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Excel.Interfaces.PageLayoutUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Excel.PageLayout#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.PageLayout): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Excel.PageLayout:class" />'
      return:
        type: void
        description: ''
  - name: setPrintArea(printArea)
    uid: 'office!Excel.PageLayout#setPrintArea:member(1)'
    package: office!
    fullName: setPrintArea(printArea)
    summary: Sets the worksheet's print area.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml

      await Excel.run(async (context) => {
          const farmSheet = context.workbook.worksheets.getItem("Print");
          farmSheet.pageLayout.setPrintArea("A1:D41");
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintArea(printArea: Range | RangeAreas | string): void;'
      parameters:
        - id: printArea
          description: The range or ranges of the content to print.
          type: '<xref uid="office!Excel.Range:class" /> | <xref uid="office!Excel.RangeAreas:class" /> | string'
      return:
        type: void
        description: ''
  - name: 'setPrintMargins(unit, marginOptions)'
    uid: 'office!Excel.PageLayout#setPrintMargins:member(1)'
    package: office!
    fullName: 'setPrintMargins(unit, marginOptions)'
    summary: Sets the worksheet's page margins with units.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintMargins(unit: Excel.PrintMarginUnit, marginOptions: Excel.PageLayoutMarginOptions): void;'
      parameters:
        - id: unit
          description: Measurement unit for the margins provided.
          type: '<xref uid="office!Excel.PrintMarginUnit:enum" />'
        - id: marginOptions
          description: Margin values to set. Margins not provided remain unchanged.
          type: '<xref uid="office!Excel.PageLayoutMarginOptions:interface" />'
      return:
        type: void
        description: ''
  - name: 'setPrintMargins(unit, marginOptions)'
    uid: 'office!Excel.PageLayout#setPrintMargins:member(2)'
    package: office!
    fullName: 'setPrintMargins(unit, marginOptions)'
    summary: Sets the worksheet's page margins with units.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintMargins(unit: "Points" | "Inches" | "Centimeters", marginOptions: Excel.PageLayoutMarginOptions): void;'
      parameters:
        - id: unit
          description: Measurement unit for the margins provided.
          type: '"Points" | "Inches" | "Centimeters"'
        - id: marginOptions
          description: Margin values to set. Margins not provided remain unchanged.
          type: '<xref uid="office!Excel.PageLayoutMarginOptions:interface" />'
      return:
        type: void
        description: ''
  - name: setPrintTitleColumns(printTitleColumns)
    uid: 'office!Excel.PageLayout#setPrintTitleColumns:member(1)'
    package: office!
    fullName: setPrintTitleColumns(printTitleColumns)
    summary: Sets the columns that contain the cells to be repeated at the left of each page of the worksheet for printing.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintTitleColumns(printTitleColumns: Range | string): void;'
      parameters:
        - id: printTitleColumns
          description: The columns to be repeated to the left of each page. The range must span the entire column to be valid.
          type: '<xref uid="office!Excel.Range:class" /> | string'
      return:
        type: void
        description: ''
  - name: setPrintTitleRows(printTitleRows)
    uid: 'office!Excel.PageLayout#setPrintTitleRows:member(1)'
    package: office!
    fullName: setPrintTitleRows(printTitleRows)
    summary: Sets the rows that contain the cells to be repeated at the top of each page of the worksheet for printing.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml

      await Excel.run(async (context) => {
          const farmSheet = context.workbook.worksheets.getItem("Print");
          farmSheet.pageLayout.setPrintTitleRows("$1:$1");
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPrintTitleRows(printTitleRows: Range | string): void;'
      parameters:
        - id: printTitleRows
          description: The rows to be repeated at the top of each page. The range must span the entire row to be valid.
          type: '<xref uid="office!Excel.Range:class" /> | string'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.PageLayout#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.PageLayout object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.PageLayoutData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.PageLayoutData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.PageLayoutData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
