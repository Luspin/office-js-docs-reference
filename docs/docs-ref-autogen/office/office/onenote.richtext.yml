### YamlMime:TSType
name: OneNote.RichText
uid: 'office!OneNote.RichText:class'
package: office!
fullName: OneNote.RichText
summary: Represents a RichText object in a Paragraph.
remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!OneNote.RichText#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!OneNote.RequestContext:class" />'
  - name: id
    uid: 'office!OneNote.RichText#id:member'
    package: office!
    fullName: id
    summary: Gets the ID of the RichText object. Read-only.
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: languageId
    uid: 'office!OneNote.RichText#languageId:member'
    package: office!
    fullName: languageId
    summary: The language id of the text. Read-only.
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly languageId: string;'
      return:
        type: string
  - name: paragraph
    uid: 'office!OneNote.RichText#paragraph:member'
    package: office!
    fullName: paragraph
    summary: Gets the Paragraph object that contains the RichText object. Read-only.
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type: '<xref uid="office!OneNote.Paragraph:class" />'
  - name: style
    uid: 'office!OneNote.RichText#style:member'
    package: office!
    fullName: style
    summary: Gets the text style of the RichText object. Read-only.
    remarks: '\[ [API set: OneNoteApi 1.8](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly style: OneNote.ParagraphStyle;'
      return:
        type: '<xref uid="office!OneNote.ParagraphStyle:enum" />'
  - name: text
    uid: 'office!OneNote.RichText#text:member'
    package: office!
    fullName: text
    summary: Gets the text content of the RichText object. Read-only.
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly text: string;'
      return:
        type: string
methods:
  - name: getHtml()
    uid: 'office!OneNote.RichText#getHtml:member(1)'
    package: office!
    fullName: getHtml()
    summary: Get the HTML of the rich text
    remarks: '\[ [API set: OneNoteApi 1.1](/javascript/api/requirement-sets/onenote/onenote-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;'
        description: The html of the rich text
  - name: load(options)
    uid: 'office!OneNote.RichText#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: OneNote.Interfaces.RichTextLoadOptions): OneNote.RichText;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!OneNote.Interfaces.RichTextLoadOptions:interface" />'
      return:
        type: '<xref uid="office!OneNote.RichText:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!OneNote.RichText#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.RichText;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!OneNote.RichText:class" />'
        description: |-


          #### Examples

          ```typescript
          await OneNote.run(async (context) => {

              // Get the collection of pageContent items from the page.
              const pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page, and then get its outline's paragraphs.
              const outlinePageContents = pageContents.getItem(0);
              let paragraphs = outlinePageContents.outline.paragraphs;
              const richTextParagraphs = paragraphs.items;
              // Queue a command to load the id and type of each page content in the outline.
              pageContents.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              await context.sync();

              // Load all page contents of type Outline.
              $.each(pageContents.items, function(index, pageContent) {
                  if(pageContent.type == 'Outline')
                  {
                      pageContent.load('outline,outline/paragraphs,outline/paragraphs/type');
                      outlinePageContents.push(pageContent);
                  }
              });
              await context.sync();

              // Load all rich text paragraphs across outlines.
              $.each(outlinePageContents, function(index, outlinePageContent) {
                  const outline = outlinePageContent.outline;
                  paragraphs = paragraphs.concat(outline.paragraphs.items);
              });
              $.each(paragraphs, function(index, paragraph) {
                  if(paragraph.type == 'RichText')
                  {
                      richTextParagraphs.push(paragraph);
                      paragraph.load("id,richText/text");
                  }
              });
              await context.sync();

              // Display all rich text paragraphs to the console.
              $.each(richTextParagraphs, function(index, richTextParagraph) {
                  const richText = richTextParagraph.richText;
                  console.log(
                      "Paragraph found with richtext content : " + 
                      richText.text + " and richtext id : " + richText.id);
              });
              await context.sync();
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'office!OneNote.RichText#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): OneNote.RichText;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!OneNote.RichText:class" />'
        description: ''
  - name: toJSON()
    uid: 'office!OneNote.RichText#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original OneNote.RichText object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `OneNote.Interfaces.RichTextData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): OneNote.Interfaces.RichTextData;'
      return:
        type: '<xref uid="office!OneNote.Interfaces.RichTextData:interface" />'
        description: ''
  - name: track()
    uid: 'office!OneNote.RichText#track:member(1)'
    package: office!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for `context.trackedObjects.add(thisObject)`<!-- -->. If you are using this object across `.sync` calls and
      outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property
      or invoking a method on the object, you needed to have added the object to the tracked object collection when the
      object was first created.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): OneNote.RichText;'
      return:
        type: '<xref uid="office!OneNote.RichText:class" />'
        description: ''
  - name: untrack()
    uid: 'office!OneNote.RichText#untrack:member(1)'
    package: office!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      `context.trackedObjects.remove(thisObject)`<!-- -->. Having many tracked objects slows down the host application,
      so please remember to free any objects you add, once you're done using them. You will need to call
      `context.sync()` before the memory release takes effect.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): OneNote.RichText;'
      return:
        type: '<xref uid="office!OneNote.RichText:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
