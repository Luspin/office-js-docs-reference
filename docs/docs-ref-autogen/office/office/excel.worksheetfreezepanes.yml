### YamlMime:TSType
name: Excel.WorksheetFreezePanes
uid: 'office!Excel.WorksheetFreezePanes:class'
package: office!
fullName: Excel.WorksheetFreezePanes
summary: ''
remarks: '\[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Excel.WorksheetFreezePanes#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
methods:
  - name: freezeAt(frozenRange)
    uid: 'office!Excel.WorksheetFreezePanes#freezeAt:member(1)'
    package: office!
    fullName: freezeAt(frozenRange)
    summary: >-
      Sets the frozen cells in the active worksheet view. The range provided corresponds to cells that will be frozen in
      the top- and left-most pane.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-freeze-panes.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          // Freeze the specified range in top-and-left-most pane of the worksheet.
          sheet.freezePanes.freezeAt(sheet.getRange("H2:K5"));

          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'freezeAt(frozenRange: Range | string): void;'
      parameters:
        - id: frozenRange
          description: 'A range that represents the cells to be frozen, or `null` to remove all frozen panes.'
          type: '<xref uid="office!Excel.Range:class" /> | string'
      return:
        type: void
        description: ''
  - name: freezeColumns(count)
    uid: 'office!Excel.WorksheetFreezePanes#freezeColumns:member(1)'
    package: office!
    fullName: freezeColumns(count)
    summary: Freeze the first column or columns of the worksheet in place.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-freeze-panes.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          // Freeze the first two columns in the worksheet.
          sheet.freezePanes.freezeColumns(2);

          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'freezeColumns(count?: number): void;'
      parameters:
        - id: count
          description: 'Optional number of columns to freeze, or zero to unfreeze all columns'
          type: number
      return:
        type: void
        description: ''
  - name: freezeRows(count)
    uid: 'office!Excel.WorksheetFreezePanes#freezeRows:member(1)'
    package: office!
    fullName: freezeRows(count)
    summary: Freeze the top row or rows of the worksheet in place.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-freeze-panes.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          // Freeze the top two rows in the worksheet.
          sheet.freezePanes.freezeRows(2);

          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'freezeRows(count?: number): void;'
      parameters:
        - id: count
          description: 'Optional number of rows to freeze, or zero to unfreeze all rows'
          type: number
      return:
        type: void
        description: ''
  - name: getLocation()
    uid: 'office!Excel.WorksheetFreezePanes#getLocation:member(1)'
    package: office!
    fullName: getLocation()
    summary: >-
      Gets a range that describes the frozen cells in the active worksheet view. The frozen range corresponds to cells
      that are frozen in the top- and left-most pane.
    remarks: '\[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: getLocationOrNullObject()
    uid: 'office!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)'
    package: office!
    fullName: getLocationOrNullObject()
    summary: >-
      Gets a range that describes the frozen cells in the active worksheet view. The frozen range corresponds to cells
      that are frozen in the top- and left-most pane. If there is no frozen pane, then this method returns an object
      with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-freeze-panes.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");
          const frozenRange = sheet.freezePanes.getLocationOrNullObject();
          frozenRange.load("address");

          await context.sync();

          if (frozenRange.isNullObject) {
              console.log(`The worksheet does not contain a frozen pane.`);
          } else {
              console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is "${frozenRange.address}"`);
          }
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getLocationOrNullObject(): Excel.Range;'
      return:
        type: '<xref uid="office!Excel.Range:class" />'
        description: ''
  - name: toJSON()
    uid: 'office!Excel.WorksheetFreezePanes#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.WorksheetFreezePanes object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetFreezePanesData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type: |-
          {
                      [key: string]: string;
                  }
        description: ''
  - name: unfreeze()
    uid: 'office!Excel.WorksheetFreezePanes#unfreeze:member(1)'
    package: office!
    fullName: unfreeze()
    summary: Removes all frozen panes in the worksheet.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-freeze-panes.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");
          sheet.freezePanes.unfreeze();

          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unfreeze(): void;'
      return:
        type: void
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
