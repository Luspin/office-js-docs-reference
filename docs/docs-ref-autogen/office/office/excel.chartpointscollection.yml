### YamlMime:TSType
name: Excel.ChartPointsCollection
uid: 'office!Excel.ChartPointsCollection:class'
package: office!
fullName: Excel.ChartPointsCollection
summary: A collection of all the chart points within a series inside a chart.
remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Excel.ChartPointsCollection#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: count
    uid: 'office!Excel.ChartPointsCollection#count:member'
    package: office!
    fullName: count
    summary: Returns the number of chart points in the series.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly count: number;'
      return:
        type: number
  - name: items
    uid: 'office!Excel.ChartPointsCollection#items:member'
    package: office!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Excel.ChartPoint[];'
      return:
        type: '<xref uid="office!Excel.ChartPoint:class" />[]'
methods:
  - name: getCount()
    uid: 'office!Excel.ChartPointsCollection#getCount:member(1)'
    package: office!
    fullName: getCount()
    summary: Returns the number of chart points in the series.
    remarks: '\[ [API set: ExcelApi 1.4](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: ''
  - name: getItemAt(index)
    uid: 'office!Excel.ChartPointsCollection#getItemAt:member(1)'
    package: office!
    fullName: getItemAt(index)
    summary: Retrieve a point based on its position within the series.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      // Set the border color for the first points in the points collection.
      await Excel.run(async (context) => { 
          const points = context.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
          points.getItemAt(0).format.fill.setSolidColor("8FBC8F");
          await context.sync();
          
          console.log("Point Border Color Changed");
      });
      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemAt(index: number): Excel.ChartPoint;'
      parameters:
        - id: index
          description: Index value of the object to be retrieved. Zero-indexed.
          type: number
      return:
        type: '<xref uid="office!Excel.ChartPoint:class" />'
        description: ''
  - name: load(options)
    uid: 'office!Excel.ChartPointsCollection#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.ChartPointsCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="office!Excel.Interfaces.ChartPointsCollectionLoadOptions:interface" /> & <xref
            uid="office!Excel.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="office!Excel.ChartPointsCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.ChartPointsCollection#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.ChartPointsCollection:class" />'
        description: |-


          #### Examples

          ```typescript
          // Get the number of points.
          await Excel.run(async (context) => { 
              const pointsCollection = 
                  context.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series.getItemAt(0).points;
              pointsCollection.load('count');
              await context.sync();
              console.log("points: Count= " + pointsCollection.count);
          });
          ```
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.ChartPointsCollection#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="office!Excel.ChartPointsCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'office!Excel.ChartPointsCollection#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Excel.ChartPointsCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.ChartPointsCollectionData`<!-- -->) that contains an
      "items" array with shallow copies of any loaded properties from the collection's items.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.ChartPointsCollectionData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
