### YamlMime:TSType
name: Excel.ShowAsRule
uid: 'office!Excel.ShowAsRule:interface'
package: office!
fullName: Excel.ShowAsRule
summary: ''
remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: baseField
    uid: 'office!Excel.ShowAsRule#baseField:member'
    package: office!
    fullName: baseField
    summary: >-
      The PivotField to base the `ShowAs` calculation on, if applicable according to the `ShowAsCalculation` type, else
      `null`<!-- -->.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'baseField?: Excel.PivotField;'
      return:
        type: '<xref uid="office!Excel.PivotField:class" />'
  - name: baseItem
    uid: 'office!Excel.ShowAsRule#baseItem:member'
    package: office!
    fullName: baseItem
    summary: >-
      The item to base the `ShowAs` calculation on, if applicable according to the `ShowAsCalculation` type, else
      `null`<!-- -->.
    remarks: >-
      \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-calculations.yaml

      await Excel.run(async (context) => {
          const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
          const farmDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem("Sum of Crates Sold at Farm");
          const wholesaleDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem("Sum of Crates Sold Wholesale");

          farmDataHierarchy.load("showAs");
          wholesaleDataHierarchy.load("showAs");
          await context.sync();

          // Show the difference between crate sales of the "A Farms" and the other farms.
          // This difference is both aggregated and shown for individual fruit types (where applicable).
          let farmShowAs = farmDataHierarchy.showAs;
          farmShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;
          farmShowAs.baseField = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm");
          farmShowAs.baseItem = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm").items.getItem("A Farms");
          farmDataHierarchy.showAs = farmShowAs;

          let wholesaleShowAs = wholesaleDataHierarchy.showAs;
          wholesaleShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;
          wholesaleShowAs.baseField = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm");
          wholesaleShowAs.baseItem = pivotTable.rowHierarchies.getItem("Farm").fields.getItem("Farm").items.getItem("A Farms");
          wholesaleDataHierarchy.showAs = wholesaleShowAs;
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'baseItem?: Excel.PivotItem;'
      return:
        type: '<xref uid="office!Excel.PivotItem:class" />'
  - name: calculation
    uid: 'office!Excel.ShowAsRule#calculation:member'
    package: office!
    fullName: calculation
    summary: The `ShowAs` calculation to use for the PivotField. See `Excel.ShowAsCalculation` for details.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        calculation: Excel.ShowAsCalculation | "Unknown" | "None" | "PercentOfGrandTotal" | "PercentOfRowTotal" |
        "PercentOfColumnTotal" | "PercentOfParentRowTotal" | "PercentOfParentColumnTotal" | "PercentOfParentTotal" |
        "PercentOf" | "RunningTotal" | "PercentRunningTotal" | "DifferenceFrom" | "PercentDifferenceFrom" |
        "RankAscending" | "RankDecending" | "Index";
      return:
        type: >-
          <xref uid="office!Excel.ShowAsCalculation:enum" /> | "Unknown" | "None" | "PercentOfGrandTotal" |
          "PercentOfRowTotal" | "PercentOfColumnTotal" | "PercentOfParentRowTotal" | "PercentOfParentColumnTotal" |
          "PercentOfParentTotal" | "PercentOf" | "RunningTotal" | "PercentRunningTotal" | "DifferenceFrom" |
          "PercentDifferenceFrom" | "RankAscending" | "RankDecending" | "Index"
