### YamlMime:TSType
name: Excel.LinkedWorkbookCollection
uid: 'office!Excel.LinkedWorkbookCollection:class'
package: office!
fullName: Excel.LinkedWorkbookCollection
summary: Represents a collection of linked workbook objects.
remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Excel.LinkedWorkbookCollection#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: items
    uid: 'office!Excel.LinkedWorkbookCollection#items:member'
    package: office!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Excel.LinkedWorkbook[];'
      return:
        type: '<xref uid="office!Excel.LinkedWorkbook:class" />[]'
  - name: workbookLinksRefreshMode
    uid: 'office!Excel.LinkedWorkbookCollection#workbookLinksRefreshMode:member'
    package: office!
    fullName: workbookLinksRefreshMode
    summary: >-
      Represents the update mode of the workbook links. The mode is same for all of the workbook links present in the
      workbook.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'workbookLinksRefreshMode: Excel.WorkbookLinksRefreshMode | "Manual" | "Automatic";'
      return:
        type: '<xref uid="office!Excel.WorkbookLinksRefreshMode:enum" /> | "Manual" | "Automatic"'
methods:
  - name: breakAllLinks()
    uid: 'office!Excel.LinkedWorkbookCollection#breakAllLinks:member(1)'
    package: office!
    fullName: breakAllLinks()
    summary: >-
      Breaks all the links to the linked workbooks. Once the links are broken, any formulas referencing workbook links
      are removed entirely and replaced with the most recently retrieved values.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'breakAllLinks(): void;'
      return:
        type: void
        description: ''
  - name: getItem(key)
    uid: 'office!Excel.LinkedWorkbookCollection#getItem:member(1)'
    package: office!
    fullName: getItem(key)
    summary: Gets information about a linked workbook by its URL.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItem(key: string): Excel.LinkedWorkbook;'
      parameters:
        - id: key
          description: The URL of the linked workbook.
          type: string
      return:
        type: '<xref uid="office!Excel.LinkedWorkbook:class" />'
        description: The linked workbook with the given URL.
  - name: getItemOrNullObject(key)
    uid: 'office!Excel.LinkedWorkbookCollection#getItemOrNullObject:member(1)'
    package: office!
    fullName: getItemOrNullObject(key)
    summary: >-
      Gets information about a linked workbook by its URL. If the workbook does not exist, then this method returns an
      object with its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods
      and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.LinkedWorkbook;'
      parameters:
        - id: key
          description: The URL of the linked workbook.
          type: string
      return:
        type: '<xref uid="office!Excel.LinkedWorkbook:class" />'
        description: The linked workbook with given URL.
  - name: load(options)
    uid: 'office!Excel.LinkedWorkbookCollection#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Excel.Interfaces.LinkedWorkbookCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.LinkedWorkbookCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="office!Excel.Interfaces.LinkedWorkbookCollectionLoadOptions:interface" /> & <xref
            uid="office!Excel.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="office!Excel.LinkedWorkbookCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.LinkedWorkbookCollection#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.LinkedWorkbookCollection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.LinkedWorkbookCollection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.LinkedWorkbookCollection#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.LinkedWorkbookCollection;'
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="office!Excel.LinkedWorkbookCollection:class" />'
        description: ''
  - name: refreshAll()
    uid: 'office!Excel.LinkedWorkbookCollection#refreshAll:member(1)'
    package: office!
    fullName: refreshAll()
    summary: Makes a request to refresh all the workbook links.
    remarks: '\[ [API set: ExcelApiOnline 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'refreshAll(): void;'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.LinkedWorkbookCollection#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Excel.LinkedWorkbookCollection` object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.LinkedWorkbookCollectionData`<!-- -->) that contains
      an "items" array with shallow copies of any loaded properties from the collection's items.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.LinkedWorkbookCollectionData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.LinkedWorkbookCollectionData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
