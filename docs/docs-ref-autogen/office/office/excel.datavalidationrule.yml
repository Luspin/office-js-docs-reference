### YamlMime:TSType
name: Excel.DataValidationRule
uid: 'office!Excel.DataValidationRule:interface'
package: office!
fullName: Excel.DataValidationRule
summary: >-
  A data validation rule contains different types of data validation. You can only use one of them at a time according
  the `Excel.DataValidationType`<!-- -->.
remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: custom
    uid: 'office!Excel.DataValidationRule#custom:member'
    package: office!
    fullName: custom
    summary: Custom data validation criteria.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'custom?: Excel.CustomDataValidation;'
      return:
        type: '<xref uid="office!Excel.CustomDataValidation:interface" />'
  - name: date
    uid: 'office!Excel.DataValidationRule#date:member'
    package: office!
    fullName: date
    summary: Date data validation criteria.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'date?: Excel.DateTimeDataValidation;'
      return:
        type: '<xref uid="office!Excel.DateTimeDataValidation:interface" />'
  - name: decimal
    uid: 'office!Excel.DataValidationRule#decimal:member'
    package: office!
    fullName: decimal
    summary: Decimal data validation criteria.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'decimal?: Excel.BasicDataValidation;'
      return:
        type: '<xref uid="office!Excel.BasicDataValidation:interface" />'
  - name: list
    uid: 'office!Excel.DataValidationRule#list:member'
    package: office!
    fullName: list
    summary: List data validation criteria.
    remarks: >-
      \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/22-data-validation/data-validation.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Decision");
          const nameRange = 
              sheet.tables.getItem("NameOptionsTable").columns.getItem("Baby Name").getDataBodyRange();

          // When you are developing, it is a good practice to
          // clear the dataValidation object with each run of your code.
          nameRange.dataValidation.clear();

          const nameSourceRange = context.workbook.worksheets.getItem("Names").getRange("A1:A3");

          let approvedListRule = {
              list: {
                  inCellDropDown: true,
                  source: nameSourceRange
              }
          };
          nameRange.dataValidation.rule = approvedListRule;

          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'list?: Excel.ListDataValidation;'
      return:
        type: '<xref uid="office!Excel.ListDataValidation:interface" />'
  - name: textLength
    uid: 'office!Excel.DataValidationRule#textLength:member'
    package: office!
    fullName: textLength
    summary: Text length data validation criteria.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'textLength?: Excel.BasicDataValidation;'
      return:
        type: '<xref uid="office!Excel.BasicDataValidation:interface" />'
  - name: time
    uid: 'office!Excel.DataValidationRule#time:member'
    package: office!
    fullName: time
    summary: Time data validation criteria.
    remarks: '\[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'time?: Excel.DateTimeDataValidation;'
      return:
        type: '<xref uid="office!Excel.DateTimeDataValidation:interface" />'
  - name: wholeNumber
    uid: 'office!Excel.DataValidationRule#wholeNumber:member'
    package: office!
    fullName: wholeNumber
    summary: Whole number data validation criteria.
    remarks: >-
      \[ [API set: ExcelApi 1.8](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/22-data-validation/data-validation.yaml

      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Decision");
          const rankingRange = sheet.tables.getItem("NameOptionsTable").columns.getItem("Ranking").getDataBodyRange();

          // When you are developing, it is a good practice to
          // clear the dataValidation object with each run of your code.
          rankingRange.dataValidation.clear();

          let greaterThanZeroRule = {
              wholeNumber: {
                  formula1: 0,
                  operator: Excel.DataValidationOperator.greaterThan
              }
          };
          rankingRange.dataValidation.rule = greaterThanZeroRule;

          rankingRange.dataValidation.prompt = {
              message: "Please enter a positive number.",
              showPrompt: true,
              title: "Positive numbers only."
          };

          rankingRange.dataValidation.errorAlert = {
              message: "Sorry, only positive numbers are allowed",
              showAlert: true,
              style: "Stop",
              title: "Negative Number Entered"
          };

          await context.sync();
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'wholeNumber?: Excel.BasicDataValidation;'
      return:
        type: '<xref uid="office!Excel.BasicDataValidation:interface" />'
