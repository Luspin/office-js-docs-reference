### YamlMime:TSType
name: Word.CommentContentRange
uid: 'office!Word.CommentContentRange:class'
package: office!
fullName: Word.CommentContentRange
summary: ''
remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: bold
    uid: 'office!Word.CommentContentRange#bold:member'
    package: office!
    fullName: bold
    summary: Gets or sets a value that indicates whether the comment text is bold.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'bold: boolean;'
      return:
        type: boolean
  - name: context
    uid: 'office!Word.CommentContentRange#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Word.RequestContext:class" />'
  - name: hyperlink
    uid: 'office!Word.CommentContentRange#hyperlink:member'
    package: office!
    fullName: hyperlink
    summary: >-
      Gets the first hyperlink in the range, or sets a hyperlink on the range. All hyperlinks in the range are deleted
      when you set a new hyperlink on the range.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hyperlink: string;'
      return:
        type: string
  - name: isEmpty
    uid: 'office!Word.CommentContentRange#isEmpty:member'
    package: office!
    fullName: isEmpty
    summary: Checks whether the range length is zero.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isEmpty: boolean;'
      return:
        type: boolean
  - name: italic
    uid: 'office!Word.CommentContentRange#italic:member'
    package: office!
    fullName: italic
    summary: Gets or sets a value that indicates whether the comment text is italicized.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'italic: boolean;'
      return:
        type: boolean
  - name: strikeThrough
    uid: 'office!Word.CommentContentRange#strikeThrough:member'
    package: office!
    fullName: strikeThrough
    summary: Gets or sets a value that indicates whether the comment text has a strikethrough.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strikeThrough: boolean;'
      return:
        type: boolean
  - name: text
    uid: 'office!Word.CommentContentRange#text:member'
    package: office!
    fullName: text
    summary: Gets the text of the comment range.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly text: string;'
      return:
        type: string
  - name: underline
    uid: 'office!Word.CommentContentRange#underline:member'
    package: office!
    fullName: underline
    summary: >-
      Gets or sets a value that indicates the comment text's underline type. 'None' if the comment text is not
      underlined.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick"
        | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine"
        | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";
      return:
        type: >-
          <xref uid="office!Word.UnderlineType:enum" /> | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" |
          "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" |
          "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" |
          "WaveHeavy" | "WaveDouble"
methods:
  - name: 'insertText(text, insertLocation)'
    uid: 'office!Word.CommentContentRange#insertText:member(1)'
    package: office!
    fullName: 'insertText(text, insertLocation)'
    summary: >-
      Inserts text into at the specified location. **Note**: For the modern comment, the content range tracked across
      context turns to empty if any revision to the comment is posted through the UI.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertText(text: string, insertLocation: Word.InsertLocation | "Replace" | "Start" | "End" | "Before" |
        "After"): Word.CommentContentRange;
      parameters:
        - id: text
          description: Required. The text to be inserted in to the CommentContentRange.
          type: string
        - id: insertLocation
          description: 'Required. The value must be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.'
          type: '<xref uid="office!Word.InsertLocation:enum" /> | "Replace" | "Start" | "End" | "Before" | "After"'
      return:
        type: '<xref uid="office!Word.CommentContentRange:class" />'
        description: ''
  - name: load(options)
    uid: 'office!Word.CommentContentRange#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.CommentContentRangeLoadOptions): Word.CommentContentRange;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Word.Interfaces.CommentContentRangeLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Word.CommentContentRange:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Word.CommentContentRange#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.CommentContentRange;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Word.CommentContentRange:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Word.CommentContentRange#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.CommentContentRange;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Word.CommentContentRange:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Word.CommentContentRange#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.CommentContentRangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Word.Interfaces.CommentContentRangeUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Word.CommentContentRange#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.CommentContentRange): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Word.CommentContentRange:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Word.CommentContentRange#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Word.CommentContentRange object is an API object, the `toJSON` method returns
      a plain JavaScript object (typed as `Word.Interfaces.CommentContentRangeData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.CommentContentRangeData;'
      return:
        type: '<xref uid="office!Word.Interfaces.CommentContentRangeData:interface" />'
        description: ''
  - name: track()
    uid: 'office!Word.CommentContentRange#track:member(1)'
    package: office!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you are using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.CommentContentRange;'
      return:
        type: '<xref uid="office!Word.CommentContentRange:class" />'
        description: ''
  - name: untrack()
    uid: 'office!Word.CommentContentRange#untrack:member(1)'
    package: office!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You will need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.CommentContentRange;'
      return:
        type: '<xref uid="office!Word.CommentContentRange:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
