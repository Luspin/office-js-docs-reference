### YamlMime:TSType
name: Excel.TableSort
uid: 'office!Excel.TableSort:class'
package: office!
fullName: Excel.TableSort
summary: Manages sorting operations on `Table` objects.
remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Excel.TableSort#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: fields
    uid: 'office!Excel.TableSort#fields:member'
    package: office!
    fullName: fields
    summary: Specifies the current conditions used to last sort the table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type: '<xref uid="office!Excel.SortField:interface" />[]'
  - name: matchCase
    uid: 'office!Excel.TableSort#matchCase:member'
    package: office!
    fullName: matchCase
    summary: Specifies if the casing impacts the last sort of the table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type: boolean
  - name: method
    uid: 'office!Excel.TableSort#method:member'
    package: office!
    fullName: method
    summary: Represents the Chinese character ordering method last used to sort the table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type: '<xref uid="office!Excel.SortMethod:enum" /> | "PinYin" | "StrokeCount"'
methods:
  - name: 'apply(fields, matchCase, method)'
    uid: 'office!Excel.TableSort#apply:member(1)'
    package: office!
    fullName: 'apply(fields, matchCase, method)'
    summary: Perform a sort operation.
    remarks: |-
      \[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      await Excel.run(async (context) => { 
          const tableName = 'Table1';
          const table = context.workbook.tables.getItem(tableName);
          table.sort.apply([ 
                  {
                      key: 2,
                      ascending: true
                  },
              ], true);
          await context.sync(); 
      });
      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type: '<xref uid="office!Excel.SortField:interface" />[]'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type: boolean
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type: '<xref uid="office!Excel.SortMethod:enum" />'
      return:
        type: void
        description: ''
  - name: 'apply(fields, matchCase, method)'
    uid: 'office!Excel.TableSort#apply:member(2)'
    package: office!
    fullName: 'apply(fields, matchCase, method)'
    summary: Perform a sort operation.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: "PinYin" | "StrokeCount"): void;'
      parameters:
        - id: fields
          description: The list of conditions to sort on.
          type: '<xref uid="office!Excel.SortField:interface" />[]'
        - id: matchCase
          description: Optional. Whether to have the casing impact string ordering.
          type: boolean
        - id: method
          description: Optional. The ordering method used for Chinese characters.
          type: '"PinYin" | "StrokeCount"'
      return:
        type: void
        description: ''
  - name: clear()
    uid: 'office!Excel.TableSort#clear:member(1)'
    package: office!
    fullName: clear()
    summary: >-
      Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the
      state of the header buttons.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clear(): void;'
      return:
        type: void
        description: ''
  - name: load(options)
    uid: 'office!Excel.TableSort#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.TableSortLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.TableSort:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.TableSort#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.TableSort:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.TableSort#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableSort;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.TableSort:class" />'
        description: ''
  - name: reapply()
    uid: 'office!Excel.TableSort#reapply:member(1)'
    package: office!
    fullName: reapply()
    summary: Reapplies the current sorting parameters to the table.
    remarks: '\[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'reapply(): void;'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.TableSort#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.TableSort object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.TableSortData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.TableSortData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
