### YamlMime:TSType
name: Excel.RangeBorder
uid: 'office!Excel.RangeBorder:class'
package: office!
fullName: Excel.RangeBorder
summary: Represents the border of an object.
remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: color
    uid: 'office!Excel.RangeBorder#color:member'
    package: office!
    fullName: color
    summary: >-
      HTML color code representing the color of the border line, in the form \#RRGGBB (e.g., "FFA500"), or as a named
      HTML color (e.g., "orange").
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'color: string;'
      return:
        type: string
  - name: context
    uid: 'office!Excel.RangeBorder#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: sideIndex
    uid: 'office!Excel.RangeBorder#sideIndex:member'
    package: office!
    fullName: sideIndex
    summary: Constant value that indicates the specific side of the border. See `Excel.BorderIndex` for details.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        readonly sideIndex: Excel.BorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" |
        "InsideHorizontal" | "DiagonalDown" | "DiagonalUp";
      return:
        type: >-
          <xref uid="office!Excel.BorderIndex:enum" /> | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" |
          "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"
  - name: style
    uid: 'office!Excel.RangeBorder#style:member'
    package: office!
    fullName: style
    summary: >-
      One of the constants of line style specifying the line style for the border. See `Excel.BorderLineStyle` for
      details.
    remarks: |-
      \[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]

      #### Examples

      ```typescript
      // Add grid borders around the range.
      await Excel.run(async (context) => { 
          const sheetName = "Sheet1";
          const rangeAddress = "A1:F8";
          const range = context.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
          range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
          range.format.borders.getItem('InsideVertical').style = 'Continuous';
          range.format.borders.getItem('EdgeBottom').style = 'Continuous';
          range.format.borders.getItem('EdgeLeft').style = 'Continuous';
          range.format.borders.getItem('EdgeRight').style = 'Continuous';
          range.format.borders.getItem('EdgeTop').style = 'Continuous';
          await context.sync(); 
      });
      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        style: Excel.BorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Double" |
        "SlantDashDot";
      return:
        type: >-
          <xref uid="office!Excel.BorderLineStyle:enum" /> | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" |
          "Dot" | "Double" | "SlantDashDot"
  - name: tintAndShade
    uid: 'office!Excel.RangeBorder#tintAndShade:member'
    package: office!
    fullName: tintAndShade
    summary: >-
      Specifies a double that lightens or darkens a color for the range border, the value is between -1 (darkest) and 1
      (brightest), with 0 for the original color. A `null` value indicates that the border doesn't have a uniform
      `tintAndShade` setting.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tintAndShade: number;'
      return:
        type: number
  - name: weight
    uid: 'office!Excel.RangeBorder#weight:member'
    package: office!
    fullName: weight
    summary: Specifies the weight of the border around a range. See `Excel.BorderWeight` for details.
    remarks: '\[ [API set: ExcelApi 1.1](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'weight: Excel.BorderWeight | "Hairline" | "Thin" | "Medium" | "Thick";'
      return:
        type: '<xref uid="office!Excel.BorderWeight:enum" /> | "Hairline" | "Thin" | "Medium" | "Thick"'
methods:
  - name: load(options)
    uid: 'office!Excel.RangeBorder#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.RangeBorderLoadOptions): Excel.RangeBorder;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.RangeBorderLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.RangeBorder:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.RangeBorder#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorder;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.RangeBorder:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.RangeBorder#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RangeBorder;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.RangeBorder:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Excel.RangeBorder#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.RangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Excel.Interfaces.RangeBorderUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Excel.RangeBorder#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.RangeBorder): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Excel.RangeBorder:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.RangeBorder#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.RangeBorder object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.RangeBorderData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.RangeBorderData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
