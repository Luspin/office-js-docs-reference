### YamlMime:TSType
name: Visio.Application
uid: 'office!Visio.Application:class'
package: office!
fullName: Visio.Application
summary: |-
  Represents the Application.

  \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
remarks: ''
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Visio.Application#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Visio.RequestContext:class" />'
  - name: showBorders
    uid: 'office!Visio.Application#showBorders:member'
    package: office!
    fullName: showBorders
    summary: |-
      Show or hide the iFrame application borders.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showBorders: boolean;'
      return:
        type: boolean
        description: |-


          #### Examples

          ```javascript
          Visio.run(session, function (ctx) {
              const application = ctx.document.application;
              application.showToolbars = false;
              application.showBorders = false;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - name: showToolbars
    uid: 'office!Visio.Application#showToolbars:member'
    package: office!
    fullName: showToolbars
    summary: |-
      Show or hide the standard toolbars.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showToolbars: boolean;'
      return:
        type: boolean
methods:
  - name: load(options)
    uid: 'office!Visio.Application#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Visio.Interfaces.ApplicationLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Visio.Application:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Visio.Application#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Application;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Visio.Application:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Visio.Application#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Visio.Application;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Visio.Application:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Visio.Application#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: |-
      This method has the following additional signature:

      `set(properties: Visio.Application): void`
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Visio.Interfaces.ApplicationUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Visio.Application#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Visio.Application): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Visio.Application:class" />'
      return:
        type: void
        description: ''
  - name: setMockData(data)
    uid: 'office!Visio.Application#setMockData:member(1)'
    package: office!
    fullName: setMockData(data)
    summary: Set mock data
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setMockData(data: Visio.Interfaces.ApplicationData): void;'
      parameters:
        - id: data
          description: ''
          type: '<xref uid="office!Visio.Interfaces.ApplicationData:interface" />'
      return:
        type: void
        description: ''
  - name: 'showToolbar(id, show)'
    uid: 'office!Visio.Application#showToolbar:member(1)'
    package: office!
    fullName: 'showToolbar(id, show)'
    summary: |-
      Sets the visibility of a specific toolbar in the application.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
      parameters:
        - id: id
          description: The type of the Toolbar
          type: '<xref uid="office!Visio.ToolBarType:enum" />'
        - id: show
          description: Whether the toolbar is visibile or not.
          type: boolean
      return:
        type: void
        description: ''
  - name: 'showToolbar(id, show)'
    uid: 'office!Visio.Application#showToolbar:member(2)'
    package: office!
    fullName: 'showToolbar(id, show)'
    summary: |-
      Sets the visibility of a specific toolbar in the application.

      \[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showToolbar(id: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
      parameters:
        - id: id
          description: The type of the Toolbar
          type: '"CommandBar" | "PageNavigationBar" | "StatusBar"'
        - id: show
          description: Whether the toolbar is visibile or not.
          type: boolean
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Visio.Application#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Visio.Application object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Visio.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Visio.Interfaces.ApplicationData;'
      return:
        type: '<xref uid="office!Visio.Interfaces.ApplicationData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
