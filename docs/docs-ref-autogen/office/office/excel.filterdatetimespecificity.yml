### YamlMime:TSEnum
name: Excel.FilterDatetimeSpecificity
uid: 'office!Excel.FilterDatetimeSpecificity:enum'
package: office!
fullName: Excel.FilterDatetimeSpecificity
summary: ''
remarks: >-
  \[ [API set: ExcelApi 1.2](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


  #### Examples


  ```typescript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-pivotfilters.yaml

  await Excel.run(async (context) => {
    // Add a date-based PivotFilter.

    // Get the PivotTable.
    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

    // PivotFilters can only be applied to PivotHierarchies that are being used for pivoting.
    // If it's not already there, add "Date Updated" to the hierarchies.
    let dateHierarchy = pivotTable.rowHierarchies.getItemOrNullObject("Date Updated");
    await context.sync();
    if (dateHierarchy.isNullObject) {
      dateHierarchy = pivotTable.rowHierarchies.add(pivotTable.hierarchies.getItem("Date Updated"));
    }

    // Apply a date filter to filter out anything logged before August.
    const filterField = dateHierarchy.fields.getItem("Date Updated");
    const dateFilter = {
      condition: Excel.DateFilterCondition.afterOrEqualTo,
      comparator: {
        date: "2020-08-01",
        specificity: Excel.FilterDatetimeSpecificity.month
      }
    };
    filterField.applyFilter({ dateFilter: dateFilter });

    await context.sync();
  });

  ```
example: []
isPreview: false
isDeprecated: false
fields:
  - name: day
    uid: 'office!Excel.FilterDatetimeSpecificity.day:member'
    package: office!
    summary: ''
    value: '"Day"'
  - name: hour
    uid: 'office!Excel.FilterDatetimeSpecificity.hour:member'
    package: office!
    summary: ''
    value: '"Hour"'
  - name: minute
    uid: 'office!Excel.FilterDatetimeSpecificity.minute:member'
    package: office!
    summary: ''
    value: '"Minute"'
  - name: month
    uid: 'office!Excel.FilterDatetimeSpecificity.month:member'
    package: office!
    summary: ''
    value: '"Month"'
  - name: second
    uid: 'office!Excel.FilterDatetimeSpecificity.second:member'
    package: office!
    summary: ''
    value: '"Second"'
  - name: year
    uid: 'office!Excel.FilterDatetimeSpecificity.year:member'
    package: office!
    summary: ''
    value: '"Year"'
