### YamlMime:TSType
name: Excel.Line
uid: 'office!Excel.Line:class'
package: office!
fullName: Excel.Line
summary: 'Represents a line inside a worksheet. To get the corresponding `Shape` object, use `Line.shape`<!-- -->.'
remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
isPreview: false
isDeprecated: false
type: class
properties:
  - name: beginArrowheadLength
    uid: 'office!Excel.Line#beginArrowheadLength:member'
    package: office!
    fullName: beginArrowheadLength
    summary: Represents the length of the arrowhead at the beginning of the specified line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'beginArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type: '<xref uid="office!Excel.ArrowheadLength:enum" /> | "Short" | "Medium" | "Long"'
  - name: beginArrowheadStyle
    uid: 'office!Excel.Line#beginArrowheadStyle:member'
    package: office!
    fullName: beginArrowheadStyle
    summary: Represents the style of the arrowhead at the beginning of the specified line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'beginArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type: >-
          <xref uid="office!Excel.ArrowheadStyle:enum" /> | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" |
          "Open"
  - name: beginArrowheadWidth
    uid: 'office!Excel.Line#beginArrowheadWidth:member'
    package: office!
    fullName: beginArrowheadWidth
    summary: Represents the width of the arrowhead at the beginning of the specified line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'beginArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type: '<xref uid="office!Excel.ArrowheadWidth:enum" /> | "Narrow" | "Medium" | "Wide"'
  - name: beginConnectedShape
    uid: 'office!Excel.Line#beginConnectedShape:member'
    package: office!
    fullName: beginConnectedShape
    summary: Represents the shape to which the beginning of the specified line is attached.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly beginConnectedShape: Excel.Shape;'
      return:
        type: '<xref uid="office!Excel.Shape:class" />'
  - name: beginConnectedSite
    uid: 'office!Excel.Line#beginConnectedSite:member'
    package: office!
    fullName: beginConnectedSite
    summary: >-
      Represents the connection site to which the beginning of a connector is connected. Returns `null` when the
      beginning of the line is not attached to any shape.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly beginConnectedSite: number;'
      return:
        type: number
  - name: connectorType
    uid: 'office!Excel.Line#connectorType:member'
    package: office!
    fullName: connectorType
    summary: Represents the connector type for the line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectorType: Excel.ConnectorType | "Straight" | "Elbow" | "Curve";'
      return:
        type: '<xref uid="office!Excel.ConnectorType:enum" /> | "Straight" | "Elbow" | "Curve"'
  - name: context
    uid: 'office!Excel.Line#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: endArrowheadLength
    uid: 'office!Excel.Line#endArrowheadLength:member'
    package: office!
    fullName: endArrowheadLength
    summary: Represents the length of the arrowhead at the end of the specified line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type: '<xref uid="office!Excel.ArrowheadLength:enum" /> | "Short" | "Medium" | "Long"'
  - name: endArrowheadStyle
    uid: 'office!Excel.Line#endArrowheadStyle:member'
    package: office!
    fullName: endArrowheadStyle
    summary: Represents the style of the arrowhead at the end of the specified line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type: >-
          <xref uid="office!Excel.ArrowheadStyle:enum" /> | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" |
          "Open"
  - name: endArrowheadWidth
    uid: 'office!Excel.Line#endArrowheadWidth:member'
    package: office!
    fullName: endArrowheadWidth
    summary: Represents the width of the arrowhead at the end of the specified line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type: '<xref uid="office!Excel.ArrowheadWidth:enum" /> | "Narrow" | "Medium" | "Wide"'
  - name: endConnectedShape
    uid: 'office!Excel.Line#endConnectedShape:member'
    package: office!
    fullName: endConnectedShape
    summary: Represents the shape to which the end of the specified line is attached.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly endConnectedShape: Excel.Shape;'
      return:
        type: '<xref uid="office!Excel.Shape:class" />'
  - name: endConnectedSite
    uid: 'office!Excel.Line#endConnectedSite:member'
    package: office!
    fullName: endConnectedSite
    summary: >-
      Represents the connection site to which the end of a connector is connected. Returns `null` when the end of the
      line is not attached to any shape.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly endConnectedSite: number;'
      return:
        type: number
  - name: id
    uid: 'office!Excel.Line#id:member'
    package: office!
    fullName: id
    summary: Specifies the shape identifier.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly id: string;'
      return:
        type: string
  - name: isBeginConnected
    uid: 'office!Excel.Line#isBeginConnected:member'
    package: office!
    fullName: isBeginConnected
    summary: Specifies if the beginning of the specified line is connected to a shape.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isBeginConnected: boolean;'
      return:
        type: boolean
  - name: isEndConnected
    uid: 'office!Excel.Line#isEndConnected:member'
    package: office!
    fullName: isEndConnected
    summary: Specifies if the end of the specified line is connected to a shape.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly isEndConnected: boolean;'
      return:
        type: boolean
  - name: shape
    uid: 'office!Excel.Line#shape:member'
    package: office!
    fullName: shape
    summary: Returns the `Shape` object associated with the line.
    remarks: '\[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type: '<xref uid="office!Excel.Shape:class" />'
methods:
  - name: 'connectBeginShape(shape, connectionSite)'
    uid: 'office!Excel.Line#connectBeginShape:member(1)'
    package: office!
    fullName: 'connectBeginShape(shape, connectionSite)'
    summary: Attaches the beginning of the specified connector to a specified shape.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-lines.yaml

      await Excel.run(async (context) => {
          const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
          const line = shapes.getItem("StraightLine").line;
          line.connectBeginShape(shapes.getItem("Left"), 2);
          line.connectEndShape(shapes.getItem("Right"), 0);
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectBeginShape(shape: Excel.Shape, connectionSite: number): void;'
      parameters:
        - id: shape
          description: The shape to connect.
          type: '<xref uid="office!Excel.Shape:class" />'
        - id: connectionSite
          description: >-
            The connection site on the shape to which the beginning of the connector is attached. Must be an integer
            between 0 (inclusive) and the connection-site count of the specified shape (exclusive).
          type: number
      return:
        type: void
        description: ''
  - name: 'connectEndShape(shape, connectionSite)'
    uid: 'office!Excel.Line#connectEndShape:member(1)'
    package: office!
    fullName: 'connectEndShape(shape, connectionSite)'
    summary: Attaches the end of the specified connector to a specified shape.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-lines.yaml

      await Excel.run(async (context) => {
          const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
          const line = shapes.getItem("StraightLine").line;
          line.connectBeginShape(shapes.getItem("Left"), 2);
          line.connectEndShape(shapes.getItem("Right"), 0);
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'connectEndShape(shape: Excel.Shape, connectionSite: number): void;'
      parameters:
        - id: shape
          description: The shape to connect.
          type: '<xref uid="office!Excel.Shape:class" />'
        - id: connectionSite
          description: >-
            The connection site on the shape to which the end of the connector is attached. Must be an integer between 0
            (inclusive) and the connection-site count of the specified shape (exclusive).
          type: number
      return:
        type: void
        description: ''
  - name: disconnectBeginShape()
    uid: 'office!Excel.Line#disconnectBeginShape:member(1)'
    package: office!
    fullName: disconnectBeginShape()
    summary: Detaches the beginning of the specified connector from a shape.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-lines.yaml

      await Excel.run(async (context) => {
          const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
          const line = shapes.getItem("StraightLine").line;
          line.disconnectBeginShape();
          line.disconnectEndShape();
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disconnectBeginShape(): void;'
      return:
        type: void
        description: ''
  - name: disconnectEndShape()
    uid: 'office!Excel.Line#disconnectEndShape:member(1)'
    package: office!
    fullName: disconnectEndShape()
    summary: Detaches the end of the specified connector from a shape.
    remarks: >-
      \[ [API set: ExcelApi 1.9](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-lines.yaml

      await Excel.run(async (context) => {
          const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
          const line = shapes.getItem("StraightLine").line;
          line.disconnectBeginShape();
          line.disconnectEndShape();
          await context.sync();
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disconnectEndShape(): void;'
      return:
        type: void
        description: ''
  - name: load(options)
    uid: 'office!Excel.Line#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.LineLoadOptions): Excel.Line;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.LineLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.Line:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.Line#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Line;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.Line:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.Line#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Line;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.Line:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Excel.Line#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.LineUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Excel.Interfaces.LineUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Excel.Line#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.Line): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Excel.Line:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.Line#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.Line object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Excel.Interfaces.LineData`<!-- -->) that contains shallow copies of any loaded child
      properties from the original object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.LineData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.LineData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
