### YamlMime:TSType
name: Excel.WorkbookProtection
uid: 'office!Excel.WorkbookProtection:class'
package: office!
fullName: Excel.WorkbookProtection
summary: Represents the protection of a workbook object.
remarks: '\[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Excel.WorkbookProtection#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: protected
    uid: 'office!Excel.WorkbookProtection#protected:member'
    package: office!
    fullName: protected
    summary: Specifies if the workbook is protected.
    remarks: '\[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type: boolean
methods:
  - name: load(options)
    uid: 'office!Excel.WorkbookProtection#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.WorkbookProtectionLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.WorkbookProtection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.WorkbookProtection#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.WorkbookProtection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.WorkbookProtection#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorkbookProtection;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.WorkbookProtection:class" />'
        description: ''
  - name: protect(password)
    uid: 'office!Excel.WorkbookProtection#protect:member(1)'
    package: office!
    fullName: protect(password)
    summary: Protects a workbook. Fails if the workbook has been protected.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/50-workbook/data-protection.yaml

      let password = await passwordHandler();

      passwordHelper(password);

      await Excel.run(async (context) => {
          let workbook = context.workbook;
          workbook.load("protection/protected");

          await context.sync();

          if (!workbook.protection.protected) {
              workbook.protection.protect(password);
          }
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'protect(password?: string): void;'
      parameters:
        - id: password
          description: Workbook protection password.
          type: string
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.WorkbookProtection#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns
      a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`<!-- -->) that contains shallow
      copies of any loaded child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.WorkbookProtectionData:interface" />'
        description: ''
  - name: unprotect(password)
    uid: 'office!Excel.WorkbookProtection#unprotect:member(1)'
    package: office!
    fullName: unprotect(password)
    summary: Unprotects a workbook.
    remarks: >-
      \[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/50-workbook/data-protection.yaml

      let password = await passwordHandler();

      passwordHelper(password);

      await Excel.run(async (context) => {
          let workbook = context.workbook;
          workbook.protection.unprotect(password);
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unprotect(password?: string): void;'
      parameters:
        - id: password
          description: Workbook protection password.
          type: string
      return:
        type: void
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
