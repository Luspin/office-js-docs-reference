### YamlMime:TSType
name: Word.TableCell
uid: 'office!Word.TableCell:class'
package: office!
fullName: Word.TableCell
summary: Represents a table cell in a Word document.
remarks: >-
  \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```typescript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/table-cell-access.yaml

  // Get the content of the first cell in the first table.

  await Word.run(async (context) => {
    const firstCell = context.document.body.tables.getFirst().getCell(0, 0).body;
    firstCell.load("text");

    await context.sync();
    console.log("First cell's text is: " + firstCell.text);
  });

  ```
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: body
    uid: 'office!Word.TableCell#body:member'
    package: office!
    fullName: body
    summary: Gets the body object of the cell.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly body: Word.Body;'
      return:
        type: '<xref uid="office!Word.Body:class" />'
  - name: cellIndex
    uid: 'office!Word.TableCell#cellIndex:member'
    package: office!
    fullName: cellIndex
    summary: Gets the index of the cell in its row.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly cellIndex: number;'
      return:
        type: number
  - name: columnWidth
    uid: 'office!Word.TableCell#columnWidth:member'
    package: office!
    fullName: columnWidth
    summary: Gets and sets the width of the cell's column in points. This is applicable to uniform tables.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'columnWidth: number;'
      return:
        type: number
  - name: context
    uid: 'office!Word.TableCell#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Word.RequestContext:class" />'
  - name: horizontalAlignment
    uid: 'office!Word.TableCell#horizontalAlignment:member'
    package: office!
    fullName: horizontalAlignment
    summary: 'Gets and sets the horizontal alignment of the cell. The value can be ''Left'', ''Centered'', ''Right'', or ''Justified''.'
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get content alignment details about the first cell of the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        const firstCell = firstTable.getCell(0, 0);
        firstCell.load(["horizontalAlignment", "verticalAlignment"]);
        await context.sync();

        console.log(`Details about the alignment of the first table's first cell:`);
        console.log(`- Horizontal alignment of the cell's content: ${firstCell.horizontalAlignment}`);
        console.log(`- Vertical alignment of the cell's content: ${firstCell.verticalAlignment}`);
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'horizontalAlignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type: '<xref uid="office!Word.Alignment:enum" /> | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - name: parentRow
    uid: 'office!Word.TableCell#parentRow:member'
    package: office!
    fullName: parentRow
    summary: Gets the parent row of the cell.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentRow: Word.TableRow;'
      return:
        type: '<xref uid="office!Word.TableRow:class" />'
  - name: parentTable
    uid: 'office!Word.TableCell#parentTable:member'
    package: office!
    fullName: parentTable
    summary: Gets the parent table of the cell.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type: '<xref uid="office!Word.Table:class" />'
  - name: rowIndex
    uid: 'office!Word.TableCell#rowIndex:member'
    package: office!
    fullName: rowIndex
    summary: Gets the index of the cell's row in the table.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly rowIndex: number;'
      return:
        type: number
  - name: shadingColor
    uid: 'office!Word.TableCell#shadingColor:member'
    package: office!
    fullName: shadingColor
    summary: 'Gets or sets the shading color of the cell. Color is specified in "\#RRGGBB" format or by using the color name.'
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'shadingColor: string;'
      return:
        type: string
  - name: value
    uid: 'office!Word.TableCell#value:member'
    package: office!
    fullName: value
    summary: Gets and sets the text of the cell.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'value: string;'
      return:
        type: string
  - name: verticalAlignment
    uid: 'office!Word.TableCell#verticalAlignment:member'
    package: office!
    fullName: verticalAlignment
    summary: 'Gets and sets the vertical alignment of the cell. The value can be ''Top'', ''Center'', or ''Bottom''.'
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get content alignment details about the first cell of the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        const firstCell = firstTable.getCell(0, 0);
        firstCell.load(["horizontalAlignment", "verticalAlignment"]);
        await context.sync();

        console.log(`Details about the alignment of the first table's first cell:`);
        console.log(`- Horizontal alignment of the cell's content: ${firstCell.horizontalAlignment}`);
        console.log(`- Vertical alignment of the cell's content: ${firstCell.verticalAlignment}`);
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'verticalAlignment: Word.VerticalAlignment | "Mixed" | "Top" | "Center" | "Bottom";'
      return:
        type: '<xref uid="office!Word.VerticalAlignment:enum" /> | "Mixed" | "Top" | "Center" | "Bottom"'
  - name: width
    uid: 'office!Word.TableCell#width:member'
    package: office!
    fullName: width
    summary: Gets the width of the cell in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly width: number;'
      return:
        type: number
methods:
  - name: deleteColumn()
    uid: 'office!Word.TableCell#deleteColumn:member(1)'
    package: office!
    fullName: deleteColumn()
    summary: Deletes the column containing this cell. This is applicable to uniform tables.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deleteColumn(): void;'
      return:
        type: void
        description: ''
  - name: deleteRow()
    uid: 'office!Word.TableCell#deleteRow:member(1)'
    package: office!
    fullName: deleteRow()
    summary: Deletes the row containing this cell.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'deleteRow(): void;'
      return:
        type: void
        description: ''
  - name: getBorder(borderLocation)
    uid: 'office!Word.TableCell#getBorder:member(1)'
    package: office!
    fullName: getBorder(borderLocation)
    summary: Gets the border style for the specified border.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBorder(borderLocation: Word.BorderLocation): Word.TableBorder;'
      parameters:
        - id: borderLocation
          description: Required. The border location.
          type: '<xref uid="office!Word.BorderLocation:enum" />'
      return:
        type: '<xref uid="office!Word.TableBorder:class" />'
        description: ''
  - name: getBorder(borderLocation)
    uid: 'office!Word.TableCell#getBorder:member(2)'
    package: office!
    fullName: getBorder(borderLocation)
    summary: Gets the border style for the specified border.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get border details about the first of the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        const firstCell = firstTable.getCell(0, 0);
        const borderLocation = "Left";
        const border = firstCell.getBorder(borderLocation);
        border.load(["type", "color", "width"]);
        await context.sync();

        console.log(`Details about the ${borderLocation} border of the first table's first cell:`);
        console.log(`- Color: ${border.color}`);
        console.log(`- Type: ${border.type}`);
        console.log(`- Width: ${border.width} points`);
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        getBorder(borderLocation: "Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside"
        | "Outside" | "All"): Word.TableBorder;
      parameters:
        - id: borderLocation
          description: Required. The border location.
          type: '"Top" | "Left" | "Bottom" | "Right" | "InsideHorizontal" | "InsideVertical" | "Inside" | "Outside" | "All"'
      return:
        type: '<xref uid="office!Word.TableBorder:class" />'
        description: ''
  - name: getCellPadding(cellPaddingLocation)
    uid: 'office!Word.TableCell#getCellPadding:member(1)'
    package: office!
    fullName: getCellPadding(cellPaddingLocation)
    summary: Gets cell padding in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCellPadding(cellPaddingLocation: Word.CellPaddingLocation): OfficeExtension.ClientResult<number>;'
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '<xref uid="office!Word.CellPaddingLocation:enum" />'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: ''
  - name: getCellPadding(cellPaddingLocation)
    uid: 'office!Word.TableCell#getCellPadding:member(2)'
    package: office!
    fullName: getCellPadding(cellPaddingLocation)
    summary: Gets cell padding in points.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

      // Get cell padding details about the first cell of the first table in the document.

      await Word.run(async (context) => {
        const firstTable = context.document.body.tables.getFirst();
        const firstCell = firstTable.getCell(0, 0);
        const cellPaddingLocation = "Left";
        const cellPadding = firstCell.getCellPadding(cellPaddingLocation);
        await context.sync();

        console.log(
          `Cell padding details about the ${cellPaddingLocation} border of the first table's first cell: ${cellPadding.value} points`
        );
      });

      ```
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right"): OfficeExtension.ClientResult<number>;'
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '"Top" | "Left" | "Bottom" | "Right"'
      return:
        type: '<xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;'
        description: ''
  - name: getNext()
    uid: 'office!Word.TableCell#getNext:member(1)'
    package: office!
    fullName: getNext()
    summary: Gets the next cell. Throws an `ItemNotFound` error if this cell is the last one.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNext(): Word.TableCell;'
      return:
        type: '<xref uid="office!Word.TableCell:class" />'
        description: ''
  - name: getNextOrNullObject()
    uid: 'office!Word.TableCell#getNextOrNullObject:member(1)'
    package: office!
    fullName: getNextOrNullObject()
    summary: >-
      Gets the next cell. If this cell is the last one, then this method will return an object with its `isNullObject`
      property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getNextOrNullObject(): Word.TableCell;'
      return:
        type: '<xref uid="office!Word.TableCell:class" />'
        description: ''
  - name: 'insertColumns(insertLocation, columnCount, values)'
    uid: 'office!Word.TableCell#insertColumns:member(1)'
    package: office!
    fullName: 'insertColumns(insertLocation, columnCount, values)'
    summary: >-
      Adds columns to the left or right of the cell, using the cell's column as a template. This is applicable to
      uniform tables. The string values, if specified, are set in the newly inserted rows.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertColumns(insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After",
        columnCount: number, values?: string[][]): void;
      parameters:
        - id: insertLocation
          description: Required. It must be 'Before' or 'After'.
          type: >-
            <xref uid="office!Word.InsertLocation.before:member" /> | <xref
            uid="office!Word.InsertLocation.after:member" /> | "Before" | "After"
        - id: columnCount
          description: Required. Number of columns to add.
          type: number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type: 'string[][]'
      return:
        type: void
        description: ''
  - name: 'insertRows(insertLocation, rowCount, values)'
    uid: 'office!Word.TableCell#insertRows:member(1)'
    package: office!
    fullName: 'insertRows(insertLocation, rowCount, values)'
    summary: >-
      Inserts rows above or below the cell, using the cell's row as a template. The string values, if specified, are set
      in the newly inserted rows.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        insertRows(insertLocation: Word.InsertLocation.before | Word.InsertLocation.after | "Before" | "After",
        rowCount: number, values?: string[][]): Word.TableRowCollection;
      parameters:
        - id: insertLocation
          description: Required. It must be 'Before' or 'After'.
          type: >-
            <xref uid="office!Word.InsertLocation.before:member" /> | <xref
            uid="office!Word.InsertLocation.after:member" /> | "Before" | "After"
        - id: rowCount
          description: Required. Number of rows to add.
          type: number
        - id: values
          description: Optional 2D array. Cells are filled if the corresponding strings are specified in the array.
          type: 'string[][]'
      return:
        type: '<xref uid="office!Word.TableRowCollection:class" />'
        description: ''
  - name: load(options)
    uid: 'office!Word.TableCell#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Word.Interfaces.TableCellLoadOptions): Word.TableCell;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Word.Interfaces.TableCellLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Word.TableCell:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Word.TableCell#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.TableCell;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Word.TableCell:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Word.TableCell#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Word.TableCell;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Word.TableCell:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Word.TableCell#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.TableCellUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Word.Interfaces.TableCellUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Word.TableCell#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Word.TableCell): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Word.TableCell:class" />'
      return:
        type: void
        description: ''
  - name: 'setCellPadding(cellPaddingLocation, cellPadding)'
    uid: 'office!Word.TableCell#setCellPadding:member(1)'
    package: office!
    fullName: 'setCellPadding(cellPaddingLocation, cellPadding)'
    summary: Sets cell padding in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setCellPadding(cellPaddingLocation: Word.CellPaddingLocation, cellPadding: number): void;'
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '<xref uid="office!Word.CellPaddingLocation:enum" />'
        - id: cellPadding
          description: Required. The cell padding.
          type: number
      return:
        type: void
        description: ''
  - name: 'setCellPadding(cellPaddingLocation, cellPadding)'
    uid: 'office!Word.TableCell#setCellPadding:member(2)'
    package: office!
    fullName: 'setCellPadding(cellPaddingLocation, cellPadding)'
    summary: Sets cell padding in points.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setCellPadding(cellPaddingLocation: "Top" | "Left" | "Bottom" | "Right", cellPadding: number): void;'
      parameters:
        - id: cellPaddingLocation
          description: 'Required. The cell padding location must be ''Top'', ''Left'', ''Bottom'', or ''Right''.'
          type: '"Top" | "Left" | "Bottom" | "Right"'
        - id: cellPadding
          description: Required. The cell padding.
          type: number
      return:
        type: void
        description: ''
  - name: 'split(rowCount, columnCount)'
    uid: 'office!Word.TableCell#split:member(1)'
    package: office!
    fullName: 'split(rowCount, columnCount)'
    summary: Splits the cell into the specified number of rows and columns.
    remarks: '\[ [API set: WordApi 1.4](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'split(rowCount: number, columnCount: number): void;'
      parameters:
        - id: rowCount
          description: Required. The number of rows to split into. Must be a divisor of the number of underlying rows.
          type: number
        - id: columnCount
          description: Required. The number of columns to split into.
          type: number
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Word.TableCell#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Word.TableCell object is an API object, the `toJSON` method returns a plain
      JavaScript object (typed as `Word.Interfaces.TableCellData`<!-- -->) that contains shallow copies of any loaded
      child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.TableCellData;'
      return:
        type: '<xref uid="office!Word.Interfaces.TableCellData:interface" />'
        description: ''
  - name: track()
    uid: 'office!Word.TableCell#track:member(1)'
    package: office!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you are using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.TableCell;'
      return:
        type: '<xref uid="office!Word.TableCell:class" />'
        description: ''
  - name: untrack()
    uid: 'office!Word.TableCell#untrack:member(1)'
    package: office!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You will need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.TableCell;'
      return:
        type: '<xref uid="office!Word.TableCell:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
