### YamlMime:TSType
name: Word.TableCollection
uid: 'office!Word.TableCollection:class'
package: office!
fullName: Word.TableCollection
summary: Contains the collection of the document's Table objects.
remarks: >-
  \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


  #### Examples


  ```typescript

  // Link to full sample:
  https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/manage-formatting.yaml

  // Get alignment details about the first table in the document.

  await Word.run(async (context) => {
    const firstTable = context.document.body.tables.getFirst();
    firstTable.load(["alignment", "horizontalAlignment", "verticalAlignment"]);
    await context.sync();

    console.log(`Details about the alignment of the first table:`);
    console.log(`- Alignment of the table within the containing page column: ${firstTable.alignment}`);
    console.log(`- Horizontal alignment of every cell in the table: ${firstTable.horizontalAlignment}`);
    console.log(`- Vertical alignment of every cell in the table: ${firstTable.verticalAlignment}`);
  });

  ```
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Word.TableCollection#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Word.RequestContext:class" />'
  - name: items
    uid: 'office!Word.TableCollection#items:member'
    package: office!
    fullName: items
    summary: Gets the loaded child items in this collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly items: Word.Table[];'
      return:
        type: '<xref uid="office!Word.Table:class" />[]'
methods:
  - name: getFirst()
    uid: 'office!Word.TableCollection#getFirst:member(1)'
    package: office!
    fullName: getFirst()
    summary: Gets the first table in this collection. Throws an `ItemNotFound` error if this collection is empty.
    remarks: >-
      \[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]


      #### Examples


      ```typescript

      // Link to full sample:
      https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/40-tables/table-cell-access.yaml

      // Get the content of the first cell in the first table.

      await Word.run(async (context) => {
        const firstCell = context.document.body.tables.getFirst().getCell(0, 0).body;
        firstCell.load("text");

        await context.sync();
        console.log("First cell's text is: " + firstCell.text);
      });

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirst(): Word.Table;'
      return:
        type: '<xref uid="office!Word.Table:class" />'
        description: ''
  - name: getFirstOrNullObject()
    uid: 'office!Word.TableCollection#getFirstOrNullObject:member(1)'
    package: office!
    fullName: getFirstOrNullObject()
    summary: >-
      Gets the first table in this collection. If this collection is empty, then this method will return an object with
      its `isNullObject` property set to `true`<!-- -->. For further information, see [*OrNullObject methods and
      properties](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!--
      -->.
    remarks: '\[ [API set: WordApi 1.3](/javascript/api/requirement-sets/word/word-api-requirement-sets) \]'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirstOrNullObject(): Word.Table;'
      return:
        type: '<xref uid="office!Word.Table:class" />'
        description: ''
  - name: load(options)
    uid: 'office!Word.TableCollection#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        load(options?: Word.Interfaces.TableCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions):
        Word.TableCollection;
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: >-
            <xref uid="office!Word.Interfaces.TableCollectionLoadOptions:interface" /> & <xref
            uid="office!Word.Interfaces.CollectionLoadOptions:interface" />
      return:
        type: '<xref uid="office!Word.TableCollection:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Word.TableCollection#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.TableCollection;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Word.TableCollection:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Word.TableCollection#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.TableCollection;'
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: '<xref uid="office!OfficeExtension.LoadOption:interface" />'
      return:
        type: '<xref uid="office!Word.TableCollection:class" />'
        description: ''
  - name: toJSON()
    uid: 'office!Word.TableCollection#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Word.TableCollection` object is an API object, the `toJSON` method returns a
      plain JavaScript object (typed as `Word.Interfaces.TableCollectionData`<!-- -->) that contains an "items" array
      with shallow copies of any loaded properties from the collection's items.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Word.Interfaces.TableCollectionData;'
      return:
        type: '<xref uid="office!Word.Interfaces.TableCollectionData:interface" />'
        description: ''
  - name: track()
    uid: 'office!Word.TableCollection#track:member(1)'
    package: office!
    fullName: track()
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in the document. This call is a shorthand
      for
      [context.trackedObjects.add(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. If you are using this object across `.sync` calls and outside the sequential execution of a ".run" batch, and
      get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you need to add the
      object to the tracked object collection when the object was first created. If this object is part of a collection,
      you should also track the parent collection.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'track(): Word.TableCollection;'
      return:
        type: '<xref uid="office!Word.TableCollection:class" />'
        description: ''
  - name: untrack()
    uid: 'office!Word.TableCollection#untrack:member(1)'
    package: office!
    fullName: untrack()
    summary: >-
      Release the memory associated with this object, if it has previously been tracked. This call is shorthand for
      [context.trackedObjects.remove(thisObject)](https://docs.microsoft.com/javascript/api/office/officeextension.clientrequestcontext#office-officeextension-clientrequestcontext-trackedobjects-member)<!--
      -->. Having many tracked objects slows down the host application, so please remember to free any objects you add,
      once you're done using them. You will need to call `context.sync()` before the memory release takes effect.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'untrack(): Word.TableCollection;'
      return:
        type: '<xref uid="office!Word.TableCollection:class" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
