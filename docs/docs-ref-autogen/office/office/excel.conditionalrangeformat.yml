### YamlMime:TSType
name: Excel.ConditionalRangeFormat
uid: 'office!Excel.ConditionalRangeFormat:class'
package: office!
fullName: Excel.ConditionalRangeFormat
summary: 'A format object encapsulating the conditional formats range''s font, fill, borders, and other properties.'
remarks: '\[ [API set: ExcelApi 1.6](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: borders
    uid: 'office!Excel.ConditionalRangeFormat#borders:member'
    package: office!
    fullName: borders
    summary: Collection of border objects that apply to the overall conditional format range.
    remarks: '\[ [API set: ExcelApi 1.6](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly borders: Excel.ConditionalRangeBorderCollection;'
      return:
        type: '<xref uid="office!Excel.ConditionalRangeBorderCollection:class" />'
  - name: context
    uid: 'office!Excel.ConditionalRangeFormat#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: fill
    uid: 'office!Excel.ConditionalRangeFormat#fill:member'
    package: office!
    fullName: fill
    summary: Returns the fill object defined on the overall conditional format range.
    remarks: '\[ [API set: ExcelApi 1.6](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly fill: Excel.ConditionalRangeFill;'
      return:
        type: '<xref uid="office!Excel.ConditionalRangeFill:class" />'
  - name: font
    uid: 'office!Excel.ConditionalRangeFormat#font:member'
    package: office!
    fullName: font
    summary: Returns the font object defined on the overall conditional format range.
    remarks: '\[ [API set: ExcelApi 1.6](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly font: Excel.ConditionalRangeFont;'
      return:
        type: '<xref uid="office!Excel.ConditionalRangeFont:class" />'
  - name: numberFormat
    uid: 'office!Excel.ConditionalRangeFormat#numberFormat:member'
    package: office!
    fullName: numberFormat
    summary: >-
      Represents Excel's number format code for the given range. For more information about Excel number formatting, see
      [Number format
      codes](https://support.microsoft.com/office/number-format-codes-5026bbd6-04bc-48cd-bf33-80f18b4eae68)<!-- -->.
      Cleared if `null` is passed in.
    remarks: '\[ [API set: ExcelApi 1.6](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'numberFormat: any;'
      return:
        type: any
methods:
  - name: clearFormat()
    uid: 'office!Excel.ConditionalRangeFormat#clearFormat:member(1)'
    package: office!
    fullName: clearFormat()
    summary: Remove the format properties from a conditional format rule. This creates a rule with no format settings.
    remarks: '\[ [API set: ExcelApi 1.17](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearFormat(): void;'
      return:
        type: void
        description: ''
  - name: load(options)
    uid: 'office!Excel.ConditionalRangeFormat#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeFormatLoadOptions): Excel.ConditionalRangeFormat;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.ConditionalRangeFormatLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.ConditionalRangeFormat:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.ConditionalRangeFormat#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFormat;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.ConditionalRangeFormat:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.ConditionalRangeFormat#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeFormat;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.ConditionalRangeFormat:class" />'
        description: ''
  - name: 'set(properties, options)'
    uid: 'office!Excel.ConditionalRangeFormat#set:member(1)'
    package: office!
    fullName: 'set(properties, options)'
    summary: >-
      Sets multiple properties of an object at the same time. You can pass either a plain object with the appropriate
      properties, or another API object of the same type.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      parameters:
        - id: properties
          description: >-
            A JavaScript object with properties that are structured isomorphically to the properties of the object on
            which the method is called.
          type: '<xref uid="office!Excel.Interfaces.ConditionalRangeFormatUpdateData:interface" />'
        - id: options
          description: Provides an option to suppress errors if the properties object tries to set any read-only properties.
          type: '<xref uid="office!OfficeExtension.UpdateOptions:interface" />'
      return:
        type: void
        description: ''
  - name: set(properties)
    uid: 'office!Excel.ConditionalRangeFormat#set:member(2)'
    package: office!
    fullName: set(properties)
    summary: 'Sets multiple properties on the object at the same time, based on an existing loaded object.'
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFormat): void;'
      parameters:
        - id: properties
          description: ''
          type: '<xref uid="office!Excel.ConditionalRangeFormat:class" />'
      return:
        type: void
        description: ''
  - name: toJSON()
    uid: 'office!Excel.ConditionalRangeFormat#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.ConditionalRangeFormat object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFormatData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFormatData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.ConditionalRangeFormatData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
