### YamlMime:TSType
name: Excel.NamedItemArrayValues
uid: 'office!Excel.NamedItemArrayValues:class'
package: office!
fullName: Excel.NamedItemArrayValues
summary: Represents an object containing values and types of a named item.
remarks: '\[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
example: []
isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'office!Excel.NamedItemArrayValues#context:member'
    package: office!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="office!Excel.RequestContext:class" />'
  - name: types
    uid: 'office!Excel.NamedItemArrayValues#types:member'
    package: office!
    fullName: types
    summary: Represents the types for each item in the named item array
    remarks: '\[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly types: Excel.RangeValueType[][];'
      return:
        type: '<xref uid="office!Excel.RangeValueType:enum" />[][]'
  - name: values
    uid: 'office!Excel.NamedItemArrayValues#values:member'
    package: office!
    fullName: values
    summary: Represents the values of each item in the named item array.
    remarks: '\[ [API set: ExcelApi 1.7](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly values: any[][];'
      return:
        type: 'any[][]'
  - name: valuesAsJson
    uid: 'office!Excel.NamedItemArrayValues#valuesAsJson:member'
    package: office!
    fullName: valuesAsJson
    summary: >-
      A JSON representation of the values in this named item array. Unlike `NamedItemArrayValues.values`<!-- -->,
      `NamedItemArrayValues.valuesAsJson` supports all data types which can be in a cell. Examples include formatted
      number values and web images, in addition to the standard boolean, number, and string values. Data returned from
      this API always aligns with the en-US locale. To retrieve data in the user's display locale, use
      `NamedItemArrayValues.valuesAsJsonLocal`<!-- -->.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly valuesAsJson: CellValue[][];'
      return:
        type: '<xref uid="office!Excel.CellValue:type" />[][]'
  - name: valuesAsJsonLocal
    uid: 'office!Excel.NamedItemArrayValues#valuesAsJsonLocal:member'
    package: office!
    fullName: valuesAsJsonLocal
    summary: >-
      A JSON representation of the values in this named item array. Unlike `NamedItemArrayValues.values`<!-- -->,
      `NamedItemArrayValues.valuesAsJsonLocal` supports all data types which can be in a cell. Examples include
      formatted number values and web images, in addition to the standard boolean, number, and string values. Data
      returned from this API always aligns with the user's display locale. To retrieve data independent of locale, use
      `NamedItemArrayValues.valuesAsJson`<!-- -->.
    remarks: '\[ [API set: ExcelApi 1.16](/javascript/api/requirement-sets/excel/excel-api-requirement-sets) \]'
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly valuesAsJsonLocal: CellValue[][];'
      return:
        type: '<xref uid="office!Excel.CellValue:type" />[][]'
methods:
  - name: load(options)
    uid: 'office!Excel.NamedItemArrayValues#load:member(1)'
    package: office!
    fullName: load(options)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(options?: Excel.Interfaces.NamedItemArrayValuesLoadOptions): Excel.NamedItemArrayValues;'
      parameters:
        - id: options
          description: Provides options for which properties of the object to load.
          type: '<xref uid="office!Excel.Interfaces.NamedItemArrayValuesLoadOptions:interface" />'
      return:
        type: '<xref uid="office!Excel.NamedItemArrayValues:class" />'
        description: ''
  - name: load(propertyNames)
    uid: 'office!Excel.NamedItemArrayValues#load:member(2)'
    package: office!
    fullName: load(propertyNames)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemArrayValues;'
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type: 'string | string[]'
      return:
        type: '<xref uid="office!Excel.NamedItemArrayValues:class" />'
        description: ''
  - name: load(propertyNamesAndPaths)
    uid: 'office!Excel.NamedItemArrayValues#load:member(3)'
    package: office!
    fullName: load(propertyNamesAndPaths)
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.NamedItemArrayValues;
      parameters:
        - id: propertyNamesAndPaths
          description: >-
            `propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and
            `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.
          type: |-
            {
                        select?: string;
                        expand?: string;
                    }
      return:
        type: '<xref uid="office!Excel.NamedItemArrayValues:class" />'
        description: ''
  - name: toJSON()
    uid: 'office!Excel.NamedItemArrayValues#toJSON:member(1)'
    package: office!
    fullName: toJSON()
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original Excel.NamedItemArrayValues object is an API object, the `toJSON` method
      returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemArrayValuesData`<!-- -->) that contains
      shallow copies of any loaded child properties from the original object.
    remarks: ''
    example: []
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemArrayValuesData;'
      return:
        type: '<xref uid="office!Excel.Interfaces.NamedItemArrayValuesData:interface" />'
        description: ''
extends: '<xref uid="office!OfficeExtension.ClientObject:class" />'
